create or replace PACKAGE BODY sys_gen_rpt
/* Formatted on 2/2/2015 2:03:21 PM (QP5 v5.126) */
AS
    FUNCTION list_pos_by_branch (p_pos VARCHAR2, p_bank_no VARCHAR2,p_user_id varchar2,p_module_id varchar2)
        RETURN tbl_bk_bank_org
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_bank_org_out row_bk_bank_org
                := row_bk_bank_org (NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL,
                                    NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur              ref_;
        v_log_param        VARCHAR2 (300);
        v_numofrowreturn   NUMBER := 0;
        v_rpt_seq          NUMBER := -1;
        v_sql              CLOB;
    BEGIN
        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_list_pos_by_branch);
        END IF;

        v_log_param := 'i_pos:' || p_pos || ',i_bank_no:' || p_bank_no;

        v_sql :=
            'SELECT org_no, p_org_no,short_name, LPAD('' '', (level - 1) * 4) || full_name as full_name
          FROM bk_bank_org
          WHERE bank_no             = '''
            || p_bank_no
            || ''' START WITH org_no   = '''
            || p_pos
            || ''' CONNECT BY prior org_no = p_org_no ';

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_bank_org_out.org_no,
                   v_bank_org_out.p_org_no,
                   /*v_bank_org_out.bank_no,*/
                   v_bank_org_out.short_name,
                   v_bank_org_out.full_name /*,
                    v_bank_org_out.org_type,
                    v_bank_org_out.region_code,
                    v_bank_org_out.country,
                    v_bank_org_out.province,
                    v_bank_org_out.city,
                    v_bank_org_out.county,
                    v_bank_org_out.town,
                    v_bank_org_out.description,
                    v_bank_org_out.address,
                    v_bank_org_out.telephone,
                    v_bank_org_out.create_by,
                    v_bank_org_out.create_time,
                    v_bank_org_out.update_by,
                    v_bank_org_out.update_time,
                    v_bank_org_out.sb_branch_code*/;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_bank_org_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;

        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN no_data_needed
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_list_pos_by_branch,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END list_pos_by_branch;


    /******* Cau lenh tong hop bao cao giao dich CK qua: The, CMT

    select c.transfer_type,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TT''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TT''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
                ) as USER_FAIL
        from (select ''Chuy¿n kho¿n qua th¿'' as transfer_type,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TT''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
      ) c
      union all
      select c.transfer_type,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TC''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TC''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
                ) as USER_FAIL
        from (select ''Chuy¿n kho¿n qua CMTND'' as transfer_type,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type = ''TC''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || '
      ) c
      union all*/

    FUNCTION retail_sum_transfer (p_currency_code   VARCHAR2,
                                  p_from_date      timestamp,
                                  p_to_date        timestamp,
                                  p_from_amount    NUMBER,
                                  p_to_amount      NUMBER,
                                  p_channel        VARCHAR2,
                                  p_pos            VARCHAR2,
                                  p_bank_no        VARCHAR2,
                                  p_trans_type     VARCHAR2
                                  )
        RETURN tbl_sum_transfer
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_sum_transfer_out row_sum_transfer
                := row_sum_transfer (NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur               ref_;
        v_org_no            VARCHAR2 (50);
        v_pos_office        VARCHAR2 (50);
        v_log_param         VARCHAR2 (300);
        v_numofrowreturn    NUMBER := 0;
        v_rpt_seq           NUMBER := -1;
        v_sql               CLOB;
        v_sql_from_amount   VARCHAR2 (50) := '';
        v_sql_to_amount     VARCHAR2 (50) := '';
        v_sql_channel       VARCHAR2 (50) := '';
        v_sql_pos           VARCHAR2 (500);
        v_sql_from_date     VARCHAR2 (50);
        v_sql_to_date       VARCHAR2 (50);
        v_sql_currency      VARCHAR2 (50);
        v_date_format       VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
        v_trans_type        VARCHAR2 (50);
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

         IF p_trans_type IS NOT NULL
            THEN
             IF p_trans_type = '1' THEN
                v_trans_type := ' AND a.IS_VR_TRAN = ''N''';
             ELSIF p_trans_type = '2'  THEN
                v_trans_type := ' AND a.IS_VR_TRAN = ''Y''';
             END IF;
        END IF;


        IF p_currency_code IS NOT NULL
        THEN
            v_sql_currency := ' and a.currency_code =''' || p_currency_code || '''';
        END IF;

        IF p_from_amount IS NOT NULL
        THEN
            v_sql_from_amount := ' and a.amount >=' || p_from_amount;
        END IF;

        IF p_to_amount IS NOT NULL
        THEN
            v_sql_to_amount := ' and a.amount <=' || p_to_amount;
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and a.channel_code =''' || p_channel || '''';
        END IF;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and b.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        /*IF p_pos IS NOT NULL THEN

          IF INSTR(p_pos,',') > 0 THEN
            v_sql_pos:= ' and b.sign_org IN (''' || REPLACE(p_pos,',',''',''') || ''')';
          ELSE
            v_sql_pos:= ' and b.sign_org = ''' || p_pos || '''';
          END IF;
        END IF;*/

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_sum_transfer);
        END IF;

        v_log_param :=
            'i_currency_code:'
            || p_currency_code
            ||  ',i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_from_amount:'
            || p_from_amount
            || ',i_to_amount:'
            || p_to_amount
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || p_pos
            || ',i_bank_no:'
            || p_bank_no;



        v_sql :=
            'select c.transfer_type,
       c.currency_code,
       c.status_total,
       c.status_SUCESS,
       c.status_FAIL,
       c.amount_TOTAL,
       c.amount_SUCESS,
       c.amount_FAIL,
       c.amount_FEE,
       c.amount_VAT,
       decode(c.status_total,
              ''0'',
              0,
              round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
       decode(c.status_SUCESS,
              ''0'',
              0,
              round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
       decode(c.status_FAIL,
              ''0'',
              0,
              round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
       (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
         where a.user_id = b.user_id
           and a.service_type IN (''TR'',''TS'',''QR'')
           and a.is_inter_bank = ''N''
           '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
           and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
           and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
          ) as USER_TOTAL,
       --c.USER_TOTAL as USER_TOTAL,
       (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
         where a.user_id = b.user_id
           and a.service_type IN (''TR'',''TS'',''QR'')
           and a.is_inter_bank = ''N''
           and a.status = ''SUCC''
           '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
           and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
           and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
          ) as USER_SUCESS,
       (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
         where a.user_id = b.user_id
           and a.service_type IN (''TR'',''TS'',''QR'')
           and a.is_inter_bank = ''N''
           and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
           '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
           and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
           and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
          ) as USER_FAIL
        from (select ''InternalTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and (a.service_type = ''TR'')
                 and a.is_inter_bank = ''N''
                  and a.is_batch = ''N''
                 and a.is_schedule=''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
            union all 
            select ''ExchangeMoney'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and (a.service_type = ''TS'')
                 and a.is_inter_bank = ''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
            union all 
            select ''QRCode'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and (a.service_type = ''QR'')
                 and a.is_inter_bank = ''N''
                 and a.is_batch = ''N''
                 and a.is_schedule=''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''InterBankTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
      union all

      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''ScheduledTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'',1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'',a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''BatchTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TT'',''TC'',''TS'',''QR'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TT'',''TC'',''TS'',''QR'')
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TT'',''TC'',''TS'',''QR'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''TOTAL'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'',1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TR'',''TT'',''TC'',''TS'',''QR'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
       --TN
	  union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TN'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TN'')
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TN'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''International_Transfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TN'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
	  --TW
	    union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TW'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TW'')
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TW'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''Transfer_Wallet'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TW'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
	  --TQ
	    union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TQ'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TQ'')
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TQ'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''Transfer_SML'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''TQ'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
	  
	  --PT
	    union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''PT'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
              (select count(distinct a.user_id)  from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''PT'')
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''PT'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''Phone_Transfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT
                     --,count(distinct a.user_id) as USER_TOTAL
                from bc_transfer_history a, bc_user_info b
               where a.user_id = b.user_id
                 and a.service_type IN (''PT'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || v_trans_type
            || ' group by a.currency_code
      ) c
      order by currency_code';

        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_sum_transfer_out.transfer_type,
                   v_sum_transfer_out.currency_code,
                   v_sum_transfer_out.status_total,
                   v_sum_transfer_out.status_success,
                   v_sum_transfer_out.status_fail,
                   v_sum_transfer_out.amount_total,
                   v_sum_transfer_out.amount_success,
                   v_sum_transfer_out.amount_fail,
                   v_sum_transfer_out.amount_fee,
                    v_sum_transfer_out.amount_vat,
                   v_sum_transfer_out.avg_amount_total,
                   v_sum_transfer_out.avg_amount_success,
                   v_sum_transfer_out.avg_amount_fail,
                   v_sum_transfer_out.total_user,
                   v_sum_transfer_out.total_user_success,
                   v_sum_transfer_out.total_user_fail;

            v_sum_transfer_out.status_total :=
                NVL (v_sum_transfer_out.status_total, 0);
            v_sum_transfer_out.status_success :=
                NVL (v_sum_transfer_out.status_success, 0);
            v_sum_transfer_out.status_fail :=
                NVL (v_sum_transfer_out.status_fail, 0);
            v_sum_transfer_out.amount_total :=
                NVL (v_sum_transfer_out.amount_total, 0);
            v_sum_transfer_out.amount_success :=
                NVL (v_sum_transfer_out.amount_success, 0);
            v_sum_transfer_out.amount_fail :=
                NVL (v_sum_transfer_out.amount_fail, 0);
            v_sum_transfer_out.amount_fee :=
                NVL (v_sum_transfer_out.amount_fee, 0);
            v_sum_transfer_out.amount_vat :=
                NVL (v_sum_transfer_out.amount_vat, 0);
            v_sum_transfer_out.avg_amount_total :=
                NVL (v_sum_transfer_out.avg_amount_total, 0);
            v_sum_transfer_out.avg_amount_success :=
                NVL (v_sum_transfer_out.avg_amount_success, 0);
            v_sum_transfer_out.avg_amount_fail :=
                NVL (v_sum_transfer_out.avg_amount_fail, 0);
            v_sum_transfer_out.total_user :=
                NVL (v_sum_transfer_out.total_user, 0);
            v_sum_transfer_out.total_user_success :=
                NVL (v_sum_transfer_out.total_user_success, 0);
            v_sum_transfer_out.total_user_fail :=
                NVL (v_sum_transfer_out.total_user_fail, 0);

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_sum_transfer_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_sum_transfer,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END retail_sum_transfer;

    FUNCTION corp_sum_transfer (p_currency_code   VARCHAR2,
                                p_from_date      timestamp,
                                p_to_date        timestamp,
                                p_from_amount    NUMBER,
                                p_to_amount      NUMBER,
                                p_channel        VARCHAR2,
                                p_pos            VARCHAR2,
                                p_bank_no        VARCHAR2)
        RETURN tbl_sum_transfer
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_sum_transfer_out row_sum_transfer
                := row_sum_transfer (NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur               ref_;
        v_pos_office        VARCHAR2 (50);
        v_org_no            VARCHAR2 (50);
        v_log_param         VARCHAR2 (300);
        v_numofrowreturn    NUMBER := 0;
        v_rpt_seq           NUMBER := -1;
        v_sql               CLOB;
        v_sql_from_amount   VARCHAR2 (50) := '';
        v_sql_to_amount     VARCHAR2 (50) := '';
        v_sql_channel       VARCHAR2 (50) := '';
        v_sql_pos           VARCHAR2 (500) := '';
        v_sql_from_date     VARCHAR2 (50);
        v_sql_to_date       VARCHAR2 (50);
        v_sql_currency       VARCHAR2 (50);
        v_date_format       VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        /*v_sql_pos:= ' and b.sign_org IN(select org_no from table('
                    ||rpt_package_name||rpt_list_pos_by_branch||'('''||p_pos||''','''||p_bank_no||'''))) ';*/

        IF p_currency_code IS NOT NULL
        THEN
            v_sql_currency := ' and a.currency_code =''' || p_currency_code || '''';
        END IF;

        IF p_from_amount IS NOT NULL
        THEN
            v_sql_from_amount := ' and a.amount >=' || p_from_amount;
        END IF;

        IF p_to_amount IS NOT NULL
        THEN
            v_sql_to_amount := ' and a.amount <=' || p_to_amount;
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and a.channel_code =''' || p_channel || '''';
        END IF;

        /*IF p_pos IS NOT NULL THEN

          IF INSTR(p_pos,',') > 0 THEN
            v_sql_pos:= ' and b.sign_org IN (''' || REPLACE(p_pos,',',''',''') || ''')';
          ELSE
            v_sql_pos:= ' and b.sign_org = ''' || p_pos || '''';
          END IF;

        END IF;*/
        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and b.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_corp_sum_transfer);
        END IF;

        v_log_param :=
            'i_currency_code:'
            || p_currency_code
            ||  ',i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_from_amount:'
            || p_from_amount
            || ',i_to_amount:'
            || p_to_amount
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || REPLACE (p_pos, ',', '|')
            || ',i_bank_no:'
            || p_bank_no;


        v_sql :=
            'select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 and a.is_inter_bank = ''N''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 and a.is_inter_bank = ''N''
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 and a.is_inter_bank = ''N''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''InternalTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'',1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'')
                 and a.is_inter_bank = ''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
            union all
            select ''ExchangeMoney'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'',1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TS''
                 and a.is_inter_bank = ''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
            union all
            select ''Fast_Transfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TQ''
                 and a.IS_SCHEDULE = ''N''
                 and a.IS_BATCH = ''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
            union all
            select ''QRCode'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'',1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''QR''
                 and a.is_inter_bank = ''N''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c

      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''InterBankTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_inter_bank = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
            (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''ScheduledTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_schedule = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c
      --chuyen tien quoc te
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
            (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TN''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TN''
                 and a.status = ''SUCC''
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TN''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''International_Transfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''TN''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c
      
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''BatchTransfer'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''TS'',''QR'')
                 and a.is_batch = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''SP''
                 and a.is_batch = ''Y''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''SP''
                 and a.is_batch = ''Y''
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''SP''
                 and a.is_batch = ''Y''
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''Salary_Payment'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                     sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                     sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type = ''SP''
                 and a.is_batch = ''Y''
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c
      union all
      select c.transfer_type,
             c.currency_code,
             c.status_total,
             c.status_SUCESS,
             c.status_FAIL,
             c.amount_TOTAL,
             c.amount_SUCESS,
             c.amount_FAIL,
             c.amount_FEE,
             c.amount_VAT,
             decode(c.status_total,
                    ''0'',
                    0,
                    round(c.amount_TOTAL / c.status_total, 2)) as AVERAGE_TOTAL,
             decode(c.status_SUCESS,
                    ''0'',
                    0,
                    round(c.amount_SUCESS / c.status_SUCESS, 2)) as AVERAGE_SUCESS,
             decode(c.status_FAIL,
                    ''0'',
                    0,
                    round(c.amount_FAIL / c.status_FAIL, 2)) as AVERAGE_FAIL,
             (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_TOTAL,
             --c.USER_TOTAL as USER_TOTAL,
              (select count(distinct a.user_id)  from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 and a.status = ''SUCC''
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_SUCESS,
             (select count(distinct a.user_id) from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'')
                 and a.status IN(''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' and a.currency_code = c.currency_code
                ) as USER_FAIL
        from (select ''TOTAL'' as transfer_type,
                     a.currency_code,
                     count(a.status) as status_total,
                     sum(decode(a.status, ''SUCC'', 1, 0)) as status_SUCESS,
                     sum(decode(a.status, ''FAIL'', 1,''OPTL'',1,''UPTL'',1,''OPDL'',1, 0)) as status_FAIL,
                     sum(a.amount) as amount_TOTAL,
                     sum(decode(a.status, ''SUCC'', a.amount, 0)) as amount_SUCESS,
                     sum(decode(a.status, ''FAIL'', a.amount,''OPTL'',a.amount,''UPTL'',a.amount,''OPDL'',a.amount, 0)) as amount_FAIL,
                    sum(decode(a.status, ''SUCC'', a.fee, 0))    as amount_FEE,
                    sum(decode(a.status, ''SUCC'', a.vat, 0))    as amount_VAT,
                     count(distinct a.user_id) as USER_TOTAL
                from bb_transfer_history a, bb_corp_info b
                 where a.corp_id = b.corp_id
                 and a.service_type IN (''TR'',''SP'',''TS'',''QR'',''TN'')
                 and a.status IN(''SUCC'',''FAIL'', ''OPTL'',''UPTL'', ''OPDL'')
                 '
            || v_sql_from_amount
            || v_sql_to_amount
            || '
                 and a.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                 and a.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_channel
            || v_sql_pos
            || v_sql_currency
            || ' group by a.currency_code
      ) c order by currency_code';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';
    v_sql:=v_sql ;
        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_sum_transfer_out.transfer_type,
                   v_sum_transfer_out.currency_code,
                   v_sum_transfer_out.status_total,
                   v_sum_transfer_out.status_success,
                   v_sum_transfer_out.status_fail,
                   v_sum_transfer_out.amount_total,
                   v_sum_transfer_out.amount_success,
                   v_sum_transfer_out.amount_fail,
                   v_sum_transfer_out.amount_fee,
                   v_sum_transfer_out.amount_vat,
                   v_sum_transfer_out.avg_amount_total,
                   v_sum_transfer_out.avg_amount_success,
                   v_sum_transfer_out.avg_amount_fail,
                   v_sum_transfer_out.total_user,
                   v_sum_transfer_out.total_user_success,
                   v_sum_transfer_out.total_user_fail;

            v_sum_transfer_out.status_total :=
                NVL (v_sum_transfer_out.status_total, 0);
            v_sum_transfer_out.status_success :=
                NVL (v_sum_transfer_out.status_success, 0);
            v_sum_transfer_out.status_fail :=
                NVL (v_sum_transfer_out.status_fail, 0);
            v_sum_transfer_out.amount_total :=
                NVL (v_sum_transfer_out.amount_total, 0);
            v_sum_transfer_out.amount_success :=
                NVL (v_sum_transfer_out.amount_success, 0);
            v_sum_transfer_out.amount_fail :=
                NVL (v_sum_transfer_out.amount_fail, 0);
            v_sum_transfer_out.amount_fee :=
                NVL (v_sum_transfer_out.amount_fee, 0);
            v_sum_transfer_out.amount_vat :=
                NVL (v_sum_transfer_out.amount_vat, 0);
            v_sum_transfer_out.avg_amount_total :=
                NVL (v_sum_transfer_out.avg_amount_total, 0);
            v_sum_transfer_out.avg_amount_success :=
                NVL (v_sum_transfer_out.avg_amount_success, 0);
            v_sum_transfer_out.avg_amount_fail :=
                NVL (v_sum_transfer_out.avg_amount_fail, 0);
            v_sum_transfer_out.total_user :=
                NVL (v_sum_transfer_out.total_user, 0);
            v_sum_transfer_out.total_user_success :=
                NVL (v_sum_transfer_out.total_user_success, 0);
            v_sum_transfer_out.total_user_fail :=
                NVL (v_sum_transfer_out.total_user_fail, 0);

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_sum_transfer_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_log_param,
                                            v_sql,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
   
        
        --v_log_param      
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_corp_sum_transfer,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END corp_sum_transfer;

    FUNCTION retail_transaction_transfer (p_from_date        timestamp,
                                          p_to_date          timestamp,
                                          p_user_group       NUMBER,
                                          p_transfer_type    VARCHAR2,
                                          p_channel          VARCHAR2,
                                          p_pos              VARCHAR2,
                                          p_bank_no          VARCHAR2,
                                          p_trans_type       VARCHAR2        
                                          )
        RETURN tbl_transaction_transfer
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_transaction_transfer_out row_transaction_transfer
                := row_transaction_transfer (NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur                 ref_;
        v_count               NUMBER := 0;
        v_pos_office          VARCHAR2 (50);
        v_p_org_no            VARCHAR2 (50);
        v_org_no              VARCHAR2 (50);
        v_log_param           VARCHAR2 (300);
        v_numofrowreturn      NUMBER := 0;
        v_rpt_seq             NUMBER := -1;
        v_sql                 CLOB;
        v_sql_user_group      VARCHAR2 (50) := '';
        v_sql_transfer_type   VARCHAR2 (50) := '';
        v_sql_channel         VARCHAR2 (50) := '';
        v_sql_pos             VARCHAR2 (500) := '';
        v_sql_from_date       VARCHAR2 (50);
        v_sql_to_date         VARCHAR2 (50);
        v_date_format         VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
        v_trans_type          VARCHAR2 (50);
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF p_trans_type IS NOT NULL
            THEN
             IF p_trans_type = '1' THEN
                v_trans_type := ' AND his.IS_VR_TRAN = ''N''';
             ELSIF p_trans_type = '2'  THEN
                v_trans_type := ' AND his.IS_VR_TRAN = ''Y''';
             END IF;
        END IF;


        IF p_user_group IS NOT NULL
        THEN
            v_sql_user_group := ' ';
        END IF;

        IF p_transfer_type IS NOT NULL
        THEN
            v_sql_transfer_type :=
                ' where t.transtype like ''%' || p_transfer_type || '''';
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and his.channel_code = ''' || p_channel || '''';
        END IF;

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_trans_transfer);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_user_group:'
            || p_user_group
            || ',i_transfer_type:'
            || p_transfer_type
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || REPLACE (p_pos, ',', '|')
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        BEGIN
            SELECT   COUNT (1)
              INTO   v_count
              FROM   bk_bank_org
             WHERE   p_org_no = p_pos AND bank_no = p_bank_no;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                v_count := 0;
        END;

        IF v_count = 0
        THEN
            v_sql_pos := ' and  u.sign_org = ''' || p_pos || '''';
            v_sql :=
                'select (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name  from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no = t.org) branch,';
        ELSE
            IF p_pos != v_pos_office
            THEN
                v_sql_pos :=
                       ' and  u.sign_org IN(select org_no from table('
                    || rpt_package_name
                    || rpt_list_pos_by_branch
                    || '('''
                    || p_pos
                    || ''','''
                    || p_bank_no
                    || ''','''','''')))';
            END IF;

            v_sql :=
                'select
                    (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name from bk_bank_org where org_no = (select decode(p_org_no,null,org_no,decode(p_org_no,'''
                || v_pos_office
                || ''',org_no,p_org_no)) from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no=t.org)) branch,';
        END IF;

        v_sql :=
            v_sql
            || '
                    t.org,'''' as p_org_no,t.core_sn,t.transferDate,t.acctNo,t.cif_no,t.user_id,t.name,t.productType,t.channelCode,
                    decode(t.transType,''transfer_card'',''TransferCard'', decode(t.transType,''transfer_cmt'',''TransferCMT'',
                    decode(t.transType,''CTQuocTe'',''CTQuocTe'',
                    decode(t.transType,''CTQuaSdt'',''CTQuaSdt'',
                     decode(t.transType,''exchange_money'',''exchange_money'',
                    decode(t.transType,''external_schedule'',''ScheduledInterBankTransfer'',decode(t.transType,''internal_schedule'',''ScheduledInternalTransfer'',
                    decode(t.transType,''external_batch'',''BatchInterBankTransfer'',decode(t.transType,''internal_batch'',''BatchInternalTransfer'',
                    decode(t.transType,''external_transfer'',''InterBankTransfer'',
                    decode(t.transType,''internal_transfer'',''InternalTransfer'',decode(t.transType,''fast_transfer'',''Fast_Transfer'',decode(t.transType,''transfer_wallet'',''Tranfer_Wallet'',t.transType))))))))))))) as transType,
                    t.amount,t.fee,t.vat,t.currencyCode,t.remark,t.status
                    from (select
                    u.sign_org org,
                    his.core_sn,
                    his.create_time as transferDate,
                    his.rollout_account_no acctNo,
                    bk.cif_no,
                    his.USER_ID,
                    bk.acct_name name,
                    bk.acct_type productType,
                    his.channel_code channelCode,
                    decode(his.service_type,''TT'',''transfer_card'',
                    decode(his.service_type,''TC'',''transfer_cmt'',
                    decode(his.service_type,''TS'',''exchange_money'',
                    decode(his.service_type,''QR'',''atm'',
                    decode(his.service_type,''TN'',''CTQuocTe'',
                    decode(his.service_type,''PT'',''CTQuaSdt'',
                    decode(his.service_type,''TQ'',''fast_transfer'',
                    decode(his.service_type,''TW'',''transfer_wallet'',
                    decode( his.is_schedule,''Y'',
                    decode(his.is_inter_bank,''Y'',''external_schedule'',''internal_schedule''),
                    decode(his.is_batch,''Y'',decode(his.is_inter_bank,''Y'',''external_batch'',''internal_batch''),
                    decode(his.is_inter_bank,''Y'',''external_transfer'',''internal_transfer''))))))))))) transType,
                    his.amount,
                    his.fee,
                    his.vat,
                    decode(his.currency_code,null,'' '',his.currency_code) currencyCode,
                    his.remark,
                    his.status
                from bc_transfer_history his 
                left join bk_account_info bk on  his.rollout_account_no = bk.acct_no
                left join bc_user_info u
                on his.USER_ID = u.USER_ID
                where his.status IN (''SUCC'',''FAIL'')
                '
            || v_sql_channel
            || v_trans_type
            || v_sql_pos
            || ' and his.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                and his.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                ) t '
            || v_sql_transfer_type
            || ' order by branch, transferDate desc ';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_transaction_transfer_out.branch,
                   v_transaction_transfer_out.org_no,
                   v_transaction_transfer_out.p_org_no,
                   v_transaction_transfer_out.core_sn,
                   v_transaction_transfer_out.transfer_date,
                   v_transaction_transfer_out.account_no,
                   v_transaction_transfer_out.cif_no,
                   v_transaction_transfer_out.user_id,
                   v_transaction_transfer_out.account_name,
                   v_transaction_transfer_out.account_type,
                   v_transaction_transfer_out.channel_code,
                   v_transaction_transfer_out.transfer_type,
                   v_transaction_transfer_out.amount,
                   v_transaction_transfer_out.fee,
                   v_transaction_transfer_out.vat,
                   v_transaction_transfer_out.currency_code,
                   v_transaction_transfer_out.remark,
                   v_transaction_transfer_out.status;

            IF (v_transaction_transfer_out.branch IS NOT NULL)
            THEN
                v_p_org_no := NULL;

                v_p_org_no :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        0,
                        INSTR (v_transaction_transfer_out.branch, '|') - 1);

                v_transaction_transfer_out.branch :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        INSTR (v_transaction_transfer_out.branch, '|') + 1,
                        LENGTH (v_transaction_transfer_out.branch));

                v_transaction_transfer_out.p_org_no := v_p_org_no;
            END IF;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_transaction_transfer_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_trans_transfer,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END retail_transaction_transfer;


    FUNCTION corp_transaction_transfer (p_from_date        timestamp,
                                        p_to_date          timestamp,
                                        p_user_group       NUMBER,
                                        p_transfer_type    VARCHAR2,
                                        p_channel          VARCHAR2,
                                        p_pos              VARCHAR2,
                                        p_bank_no          VARCHAR2)
        RETURN tbl_transaction_transfer
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_transaction_transfer_out row_transaction_transfer
                := row_transaction_transfer (NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur                 ref_;
        v_count               NUMBER := 0;
        v_pos_office          VARCHAR2 (50);
        v_p_org_no            VARCHAR2 (50);
        v_org_no              VARCHAR2 (50);
        v_log_param           VARCHAR2 (300);
        v_numofrowreturn      NUMBER := 0;
        v_rpt_seq             NUMBER := -1;
        v_sql                 CLOB;
        v_sql_user_group      VARCHAR2 (50) := '';
        v_sql_transfer_type   VARCHAR2 (50) := '';
        v_sql_channel         VARCHAR2 (50) := '';
        v_sql_pos             VARCHAR2 (500) := '';
        v_sql_from_date       VARCHAR2 (50);
        v_sql_to_date         VARCHAR2 (50);
        v_date_format         VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF p_user_group IS NOT NULL
        THEN
            v_sql_user_group := ' ';
        END IF;

        IF p_transfer_type IS NOT NULL
        THEN
            v_sql_transfer_type :=
                ' where t.transtype like ''%' || p_transfer_type || '''';
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and his.channel_code = ''' || p_channel || '''';
        END IF;

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_corp_trans_transfer);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_user_group:'
            || p_user_group
            || ',i_transfer_type:'
            || p_transfer_type
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || REPLACE (p_pos, ',', '|')
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        BEGIN
            SELECT   COUNT (1)
              INTO   v_count
              FROM   bk_bank_org
             WHERE   p_org_no = p_pos AND bank_no = p_bank_no;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                v_count := 0;
        END;

        IF v_count = 0
        THEN
            v_sql_pos := ' and  c.sign_org = ''' || p_pos || '''';
            v_sql :=
                'select (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no = t.org) branch,';
        ELSE
            IF p_pos != v_pos_office
            THEN
                v_sql_pos :=
                       ' and  c.sign_org IN(select org_no from table('
                    || rpt_package_name
                    || rpt_list_pos_by_branch
                    || '('''
                    || p_pos
                    || ''','''
                    || p_bank_no
                    || ''','''','''')))';
            END IF;

            v_sql :=
                'select
                    (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name from bk_bank_org where org_no = (select decode(p_org_no,null,org_no,decode(p_org_no,'''
                || v_pos_office
                || ''',org_no,p_org_no)) from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no=t.org)) branch,';
        END IF;

        v_sql :=
            v_sql
            || '
                    t.org,'''' as p_org_no,t.core_sn,t.transferDate,t.acctNo,t.cif_no,t.user_id,t.name,t.productType,t.channelCode,
                    
                    
                    decode(t.transType,''batch'',''BatchTransfer'',
                    decode(t.transType,''scheduled'',''ScheduledTransfer'',
                    decode(t.transType,''flow'',''flow'',
                    decode(t.transType,''atm'',''atm'',  
                    decode(t.transType,''external'',''InterBankTransfer'',
                    decode(t.transType,''internal'',''InternalTransfer'',
                    decode(t.transType, ''fast_transfer'', ''Fast_Transfer'',
                    decode(t.transType, ''national'', ''International_Transfer'',
                    decode(t.transType,''exchange_money'',''exchange_money'',t.transType))))))))),
                    
                    t.amount,t.fee,t.vat,t.currencyCode,t.remark,t.status
                    from(
                    select
                    c.sign_org org,
                    his.core_sn,
                    his.create_time as transferDate,
                    his.rollout_acct_no acctNo,
                    bk.cif_no,
                    c.corp_id as user_id,
                    bk.acct_name as name,
                    bk.acct_type productType,
                    his.channel_code channelCode, 
                                      (CASE 
                                     WHEN his.IS_BATCH     = ''Y'' AND his.SERVICE_TYPE = ''SP''
                                      THEN ''salary''
                                      WHEN his.IS_BATCH     = ''Y'' AND his.SERVICE_TYPE != ''SP''
                                      THEN ''batch''
                                      WHEN his.IS_BATCH     = ''N'' AND his.IS_SCHEDULE = ''Y''
                                      THEN ''scheduled''
                                       WHEN his.IS_BATCH     = ''N'' AND his.IS_CASH_FLOW = ''Y''
                                      THEN ''flow'' 
                                      WHEN his.IS_BATCH     = ''N'' AND his.SERVICE_TYPE = ''TS''
                                      THEN ''exchange_money''
                                       WHEN his.IS_BATCH     = ''N'' AND his.SERVICE_TYPE = ''QR''
                                      THEN ''atm'' 
                                      WHEN his.IS_BATCH     = ''N'' AND his.IS_SCHEDULE = ''N'' AND his.SERVICE_TYPE = ''TQ''
                                      THEN ''fast_transfer'' 
                                      WHEN his.IS_BATCH     = ''N'' AND his.IS_INTER_BANK = ''Y'' AND his.SERVICE_TYPE != ''TQ'' AND his.SERVICE_TYPE != ''TN''
                                      THEN ''external''
                                      WHEN his.IS_INTER_BANK = ''Y'' AND his.SERVICE_TYPE = ''TN''
                                      THEN ''national''
                                       WHEN his.IS_BATCH     = ''N'' AND his.IS_INTER_BANK = ''N''
                                      THEN ''internal'' 
                                      END ) transType, 
                    his.amount,
                    his.fee,
                    his.vat,
                    his.currency_code currencyCode,
                    his.remark,
                    his.status
                FROM BB_TRANSFER_HISTORY his inner join bk_account_info bk
                on his.ROLLOUT_ACCT_NO=bk.acct_no
                inner join bb_corp_info c
                on his.corp_id = c.corp_id
                and his.status IN (''SUCC'',''FAIL'')
                '
            || v_sql_channel
            || v_sql_pos
            || ' and his.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                and his.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                ) t '
            || v_sql_transfer_type
            || ' order by branch, transferDate desc';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_transaction_transfer_out.branch,
                   v_transaction_transfer_out.org_no,
                   v_transaction_transfer_out.p_org_no,
                   v_transaction_transfer_out.core_sn,
                   v_transaction_transfer_out.transfer_date,
                   v_transaction_transfer_out.account_no,
                   v_transaction_transfer_out.cif_no,
                   v_transaction_transfer_out.user_id,
                   v_transaction_transfer_out.account_name,
                   v_transaction_transfer_out.account_type,
                   v_transaction_transfer_out.channel_code,
                   v_transaction_transfer_out.transfer_type,
                   v_transaction_transfer_out.amount,
                   v_transaction_transfer_out.fee,
                   v_transaction_transfer_out.vat,
                   v_transaction_transfer_out.currency_code,
                   v_transaction_transfer_out.remark,
                   v_transaction_transfer_out.status;

            IF (v_transaction_transfer_out.branch IS NOT NULL)
            THEN
                v_p_org_no := NULL;

                v_p_org_no :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        0,
                        INSTR (v_transaction_transfer_out.branch, '|') - 1);

                v_transaction_transfer_out.branch :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        INSTR (v_transaction_transfer_out.branch, '|') + 1,
                        LENGTH (v_transaction_transfer_out.branch));

                v_transaction_transfer_out.p_org_no := v_p_org_no;
            END IF;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_transaction_transfer_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_corp_trans_transfer,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END corp_transaction_transfer;

    FUNCTION retail_customer_register (p_from_date     timestamp,
                                       p_to_date       timestamp,
                                       p_user_group    VARCHAR2,
                                       p_status        VARCHAR2,
                                       p_channel       VARCHAR2,
                                       p_pos           VARCHAR2,
                                       p_bank_no       VARCHAR2)
        RETURN tbl_customer_register
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_customer_register_out row_customer_register
                := row_customer_register (NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur              ref_;
        v_count            NUMBER := 0;
        v_pos_office       VARCHAR2 (50);
        v_p_org_no         VARCHAR2 (50);
        v_org_no           VARCHAR2 (50);
        v_log_param        VARCHAR2 (300);
        v_numofrowreturn   NUMBER := 0;
        v_rpt_seq          NUMBER := -1;
        v_sql              CLOB;
        v_sql_user_group   VARCHAR2 (500) := '';
        v_group_id         VARCHAR2 (50);
        v_sql_status       VARCHAR2 (50) := '';
        v_sql_channel      VARCHAR2 (50) := '';
        v_sql_pos          VARCHAR2 (500) := '';
        v_sql_from_date    VARCHAR2 (50);
        v_sql_to_date      VARCHAR2 (50);
        v_date_format      VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF p_status IS NOT NULL
        THEN
            v_sql_status := ' and bc.status = ''' || p_status || '''';
        END IF;

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_customer_regist);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_user_group:'
            || p_user_group
            || ',i_status:'
            || p_status
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || p_pos
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and bc.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_user_group IS NOT NULL
        THEN
            v_group_id :=
                SUBSTR (p_user_group, 1, INSTR (p_user_group, '-', 1) - 1);
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_user_group := ' INNER JOIN bc_user_group gr ';

            IF p_channel = 'IB'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON bc.group_id = gr.group_id ';
            ELSIF p_channel = 'MB'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON bc.group_id_mbs = gr.group_id ';
            ELSIF p_channel = 'SM'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON bc.group_id_sms = gr.group_id ';
            END IF;

            IF v_group_id IS NOT NULL
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' and gr.group_id = ' || v_group_id;
            END IF;
        END IF;


        v_sql :=
            'select
                  bc.user_name,
                  bc.cif_acct_name,
                  bc.cif_no,
                  cf.org_no cif_org,
                  bc.sign_org,
                  bc.create_time,
                  bc.mobile,
                  bc.email,
                  bk.user_name creator_name,
                  (select user_name from bk_user_info where user_id=bc.update_by_mng) approver_name,
                  (select group_name from bc_user_group where group_id=bc.group_id) group_ib_name,
                  (select group_name from bc_user_group where group_id=bc.group_id_mbs) group_mb_name,
                  (select group_name from bc_user_group where group_id=bc.group_id_sms) group_sm_name,
                  '''' as role_name,
                  bc.status
              from bc_user_info bc inner join bk_cif cf
              on bc.cif_no=cf.cif_no '
            || v_sql_status
            || v_sql_pos
            ||                                      --u.status like $P{status}
              ' and bc.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                and bc.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_user_group
            || ' inner join bk_user_info bk on bc.create_by = bk.user_id order by bc.create_time desc ';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_customer_register_out.user_name,
                   v_customer_register_out.full_name,
                   v_customer_register_out.cif_no,
                   v_customer_register_out.cif_branch,
                   v_customer_register_out.regist_branch,
                   v_customer_register_out.create_date,
                   v_customer_register_out.mobile,
                   v_customer_register_out.email,
                   v_customer_register_out.creator_name,
                   v_customer_register_out.approver_name,
                   v_customer_register_out.group_ib_name,
                   v_customer_register_out.group_mb_name,
                   v_customer_register_out.group_sm_name,
                   v_customer_register_out.role_name,
                   v_customer_register_out.status;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_customer_register_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_customer_regist,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END retail_customer_register;

    FUNCTION corp_customer_register (p_from_date     timestamp,
                                     p_to_date       timestamp,
                                     p_user_group    VARCHAR2,
                                     p_status        VARCHAR2,
                                     p_channel       VARCHAR2,
                                     p_pos           VARCHAR2,
                                     p_bank_no       VARCHAR2)
        RETURN tbl_customer_register
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_customer_register_out row_customer_register
                := row_customer_register (NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL,
                                          NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur              ref_;
        v_count            NUMBER := 0;
        v_pos_office       VARCHAR2 (50);
        v_p_org_no         VARCHAR2 (50);
        v_org_no           VARCHAR2 (50);
        v_log_param        VARCHAR2 (300);
        v_numofrowreturn   NUMBER := 0;
        v_rpt_seq          NUMBER := -1;
        v_sql              CLOB;
        v_sql_user_group   VARCHAR2 (500) := '';
        v_group_id         VARCHAR2 (50);
        v_sql_status       VARCHAR2 (50) := '';
        v_sql_channel      VARCHAR2 (50) := '';
        v_sql_pos          VARCHAR2 (500) := '';
        v_sql_from_date    VARCHAR2 (50);
        v_sql_to_date      VARCHAR2 (50);
        v_date_format      VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF p_status IS NOT NULL
        THEN
            v_sql_status := ' and u.status = ''' || p_status || '''';
        END IF;

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_corp_customer_regist);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_user_group:'
            || p_user_group
            || ',i_status:'
            || p_status
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || p_pos
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and c.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_user_group IS NOT NULL
        THEN
            v_group_id :=
                SUBSTR (p_user_group, 1, INSTR (p_user_group, '-', 1) - 1);
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_user_group := ' INNER JOIN bb_corp_group gr ';

            IF p_channel = 'IB'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON c.group_id = gr.group_id ';
            ELSIF p_channel = 'MB'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON c.group_id_mbs = gr.group_id ';
            ELSIF p_channel = 'SM'
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' ON c.group_id_sms = gr.group_id ';
            END IF;

            IF v_group_id IS NOT NULL
            THEN
                v_sql_user_group :=
                    v_sql_user_group || ' and gr.group_id = ' || v_group_id;
            END IF;
        END IF;

        v_sql :=
            'select
                  u.user_name,
                  c.corp_name,
                  c.cif_no,
                  (select org_no from bk_cif where cif_no=c.cif_no) cif_org,
                  c.SIGN_ORG,
                  u.create_time,
                  u.mobile,
                  u.email,
                  (select user_name from bk_user_info where user_id=u.create_by) creator_name,
                   (case when u.update_by_mng is not null then (select user_name from bk_user_info where user_id= u.update_by_mng)
                   else (select user_name from bk_user_info where user_id= c.update_by_mng) end ) approver_name,
                  (select group_name from bb_corp_group where group_id=c.group_id) group_ib_name,
                  (select group_name from bb_corp_group where group_id=c.group_id_mbs) group_mb_name,
                  (select group_name from bb_corp_group where group_id=c.group_id_sms) group_sm_name,
                  decode(u.role_id,4,''Maker'',3,''Checker'',2,''Admin'') roleName,
                  u.status
              from bb_user_info u inner join bb_corp_info c on
              u.corp_id=c.corp_id '
            || v_sql_status
            || v_sql_pos
            ||                                      --u.status like $P{status}
              ' and u.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                and u.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            || v_sql_user_group
            || ' order by u.create_time desc ';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_customer_register_out.user_name,
                   v_customer_register_out.full_name,
                   v_customer_register_out.cif_no,
                   v_customer_register_out.cif_branch,
                   v_customer_register_out.regist_branch,
                   v_customer_register_out.create_date,
                   v_customer_register_out.mobile,
                   v_customer_register_out.email,
                   v_customer_register_out.creator_name,
                   v_customer_register_out.approver_name,
                   v_customer_register_out.group_ib_name,
                   v_customer_register_out.group_mb_name,
                   v_customer_register_out.group_sm_name,
                   v_customer_register_out.role_name,
                   v_customer_register_out.status;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_customer_register_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_corp_customer_regist,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END corp_customer_register;

    FUNCTION retail_customer_group_summary (p_from_date     timestamp,
                                            p_to_date       timestamp,
                                            p_channel       VARCHAR2,
                                            p_user_group    VARCHAR2,
                                            p_pos           VARCHAR2,
                                            p_bank_no       VARCHAR2)
        RETURN tbl_customer_group_summary
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_group_summary_out row_customer_group_summary
                := row_customer_group_summary (NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur              ref_;
        v_count            NUMBER := 0;
        v_pos_office       VARCHAR2 (50);
        v_p_org_no         VARCHAR2 (50);
        v_org_no           VARCHAR2 (50);
        v_log_param        VARCHAR2 (300);
        v_numofrowreturn   NUMBER := 0;
        v_rpt_seq          NUMBER := -1;
        v_sql              CLOB;
        v_sql_user_group   VARCHAR2 (50) := '';
        v_sql_channel      VARCHAR2 (50) := '';
        v_sql_pos          VARCHAR2 (500) := '';
        v_sql_from_date    VARCHAR2 (50);
        v_sql_to_date      VARCHAR2 (50);
        v_group_id         VARCHAR2 (50);
        v_group_channel    VARCHAR2 (50);
        v_sql_where        VARCHAR2 (200);
        v_date_format      VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_customer_grp_sum);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_channel:'
            || p_channel
            || ',i_user_group:'
            || p_user_group
            || ',i_pos:'
            || p_pos
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and bui.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_user_group IS NOT NULL
        THEN
            v_group_id :=
                SUBSTR (p_user_group, 1, INSTR (p_user_group, '-', 1) - 1);
            v_group_channel :=
                SUBSTR (p_user_group, INSTR (p_user_group, '-', 1) + 1);
        END IF;



        IF p_channel IS NOT NULL
        THEN
            IF p_channel = 'IB'
            THEN
                v_sql_where := ' where bui.group_id = bug.group_id ';

                IF v_group_id IS NOT NULL
                THEN
                    v_sql_user_group := ' and bui.group_id = ' || v_group_id;
                END IF;
            ELSIF p_channel = 'MB'
            THEN
                v_sql_where := ' where bui.group_id_mbs = bug.group_id ';

                IF v_group_id IS NOT NULL
                THEN
                    v_sql_user_group :=
                        ' and bui.group_id_mbs = ' || v_group_id;
                END IF;
            ELSIF p_channel = 'SM'
            THEN
                v_sql_where := ' where bui.group_id_sms = bug.group_id ';

                IF v_group_id IS NOT NULL
                THEN
                    v_sql_user_group :=
                        ' and bui.group_id_sms = ' || v_group_id;
                END IF;
            END IF;

            v_sql :=
                'select ''' || p_channel
                || ''' channel_code, bug.group_name,
                    count(bui.user_id) as registered,
                    sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                    sum(decode(bui.status, ''ACTV'', 1, 0))/
                    count(bui.user_id)  as active_percentage,
                    sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                    sum(decode(bui.status, ''DLTD'', 0, 1)) total
                  from bc_user_info bui, bc_user_group bug
                '
                || v_sql_where
                || v_sql_user_group
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name ';
        ELSE
            v_sql :=
                'select ''IB'' channel_code, bug.group_name,
                    count(bui.user_id) as registered,
                    sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                    sum(decode(bui.status, ''ACTV'', 1, 0))/
                    count(bui.user_id)  as active_percentage,
                    sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                    sum(decode(bui.status, ''DLTD'', 0, 1)) total
                  from bc_user_info bui, bc_user_group bug
                  where bui.group_id = bug.group_id
                '
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name '
                || 'UNION select ''MB'' channel_code, bug.group_name,
                    count(bui.user_id) as registered,
                    sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                    sum(decode(bui.status, ''ACTV'', 1, 0))/
                    count(bui.user_id)  as active_percentage,
                    sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                    sum(decode(bui.status, ''DLTD'', 0, 1)) total
                  from bc_user_info bui, bc_user_group bug
                  where bui.group_id_mbs = bug.group_id
                '
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name '
                || 'UNION select ''SM'' channel_code, bug.group_name,
                    count(bui.user_id) as registered,
                    sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                    sum(decode(bui.status, ''ACTV'', 1, 0))/
                    count(bui.user_id)  as active_percentage,
                    sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                    sum(decode(bui.status, ''DLTD'', 0, 1)) total
                  from bc_user_info bui, bc_user_group bug
                  where bui.group_id_sms = bug.group_id
                '
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name '
;
        END IF;



        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_group_summary_out.channel_code,
                   v_group_summary_out.group_name,
                   v_group_summary_out.registered,
                   v_group_summary_out.active,
                   v_group_summary_out.active_percentage,
                   v_group_summary_out.newr,
                   v_group_summary_out.total
                   ;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_group_summary_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_customer_grp_sum,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END retail_customer_group_summary;

    FUNCTION corp_customer_group_summary (p_from_date     timestamp,
                                          p_to_date       timestamp,
                                          p_channel       VARCHAR2,
                                          p_user_group    VARCHAR2,
                                          p_pos           VARCHAR2,
                                          p_bank_no       VARCHAR2)
        RETURN tbl_customer_group_summary
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_group_summary_out row_customer_group_summary
                := row_customer_group_summary (NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL,
                                               NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur              ref_;
        v_count            NUMBER := 0;
        v_pos_office       VARCHAR2 (50);
        v_p_org_no         VARCHAR2 (50);
        v_org_no           VARCHAR2 (50);
        v_log_param        VARCHAR2 (300);
        v_numofrowreturn   NUMBER := 0;
        v_rpt_seq          NUMBER := -1;
        v_sql              CLOB;
        v_sql_user_group   VARCHAR2 (50) := '';
        v_sql_channel      VARCHAR2 (50) := '';
        v_sql_pos          VARCHAR2 (500) := '';
        v_sql_from_date    VARCHAR2 (50);
        v_sql_to_date      VARCHAR2 (50);
        v_group_id         VARCHAR2 (50);
        v_group_channel    VARCHAR2 (50);
        v_sql_where        VARCHAR2 (200);
        v_date_format      VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_corp_customer_grp_sum);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_channel:'
            || p_channel
            || ',i_user_group:'
            || p_user_group
            || ',i_pos:'
            || p_pos
            || ',i_bank_no:'
            || p_bank_no;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and bco.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_user_group IS NOT NULL
        THEN
            v_group_id :=
                SUBSTR (p_user_group, 1, INSTR (p_user_group, '-', 1) - 1);
            v_group_channel :=
                SUBSTR (p_user_group, INSTR (p_user_group, '-', 1) + 1);
        END IF;



        IF p_channel IS NOT NULL
        THEN
            v_sql_where := ' where bui.corp_id= bco.corp_id ';

            IF p_channel = 'IB'
            THEN
                v_sql_where :=
                    v_sql_where || ' and bco.group_id = bug.group_id ';

                IF v_group_id IS NOT NULL
                THEN
                    v_sql_user_group := ' and bco.group_id = ' || v_group_id;
                END IF;
            ELSIF p_channel = 'MB' THEN

                v_sql_where:= v_sql_where || ' and bco.group_id_mbs = bug.group_id ';

                IF v_group_id IS NOT NULL THEN
                  v_sql_user_group:= ' and bco.group_id_mbs = ' || v_group_id;
                END IF;

            ELSIF p_channel = 'SM'
            THEN
                v_sql_where :=
                    v_sql_where || ' and bco.group_id_sms = bug.group_id ';

                IF v_group_id IS NOT NULL
                THEN
                    v_sql_user_group :=
                        ' and bco.group_id_sms = ' || v_group_id;
                END IF;
            END IF;

            v_sql :=
                'select ''' || p_channel
                || ''' channel_code,bug.group_name,
                       count(bui.user_id) as registered,
                       sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                       sum(decode(bui.status, ''ACTV'', 1, 0))/
                            count(bui.user_id) as active_percentage,

                       sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                       sum(decode(bui.status, ''DLTD'', 0, 1)) total
                  from bb_user_info bui, bb_corp_group bug, bb_corp_info bco
                '
                || v_sql_where
                || v_sql_user_group
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name ';
        ELSE
            v_sql :=
                'select ''IB'' channel_code,bug.group_name,
                   count(bui.user_id) as registered,
                   sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                   sum(decode(bui.status, ''ACTV'', 1, 0))/
                        count(bui.user_id) as active_percentage,

                       sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                       sum(decode(bui.status, ''DLTD'', 0, 1)) total
                from bb_user_info bui, bb_corp_group bug, bb_corp_info bco
                where bco.group_id = bug.group_id and bui.corp_id= bco.corp_id
                '
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name '
                || /*
                   'UNION select ''MB'' channel_code, bug.group_name,
                            count(bui.user_id) as registered,
                            sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                            sum(decode(bui.status, ''ACTV'', 1, 0))/
                                 count(bui.user_id) as active_percentage
                   from bb_user_info bui, bb_corp_group bug, bb_corp_info bco
                   where bco.group_id_mbs = bug.group_id and bui.corp_id= bco.corp_id
                   ' || v_sql_pos ||
                   ' and bui.create_time >= to_date(''' || v_sql_from_date || ''',''' || v_date_format || ''')' || '
                   and bui.create_time <= to_date(''' || v_sql_to_date || ''',''' || v_date_format || ''')' ||
                   ' group by bug.group_id, bug.group_name ' ||
                   */
                  'UNION select ''MB'' channel_code, bug.group_name,
                       count(bui.user_id) as registered,
                       sum(decode(bui.status, ''ACTV'', 1, 0)) active,
                       sum(decode(bui.status, ''ACTV'', 1, 0))/
                            count(bui.user_id) as active_percentage,
                       sum(decode(bui.status, ''NEWR'', 1,''UPNM'',1,''SECP'',1, 0)) newr,
                       sum(decode(bui.status, ''DLTD'', 0, 1)) total
                from bb_user_info bui, bb_corp_group bug, bb_corp_info bco
                where bco.group_id_mbs = bug.group_id and bui.corp_id= bco.corp_id
                '
                || v_sql_pos
                || ' and bui.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
                and bui.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || ' group by bug.group_id, bug.group_name '
;
        END IF;



        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_group_summary_out.channel_code,
                   v_group_summary_out.group_name,
                   v_group_summary_out.registered,
                   v_group_summary_out.active,
                   v_group_summary_out.active_percentage,
                   v_group_summary_out.newr,
                   v_group_summary_out.total;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_group_summary_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_corp_customer_grp_sum,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END corp_customer_group_summary;

    FUNCTION retail_sum_transaction (p_currency_code   VARCHAR2,
                                  p_from_date      timestamp,
                                  p_to_date        timestamp,
                                  p_channel        VARCHAR2,
                                  p_pos            VARCHAR2,
                                  p_cif_no         VARCHAR2,
                                  p_bank_no        VARCHAR2,
                                  p_trans_type     VARCHAR2)
        RETURN tbl_sum_transaction
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_sum_transaction_out row_sum_transaction
                := row_sum_transaction (NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur               ref_;
        v_org_no            VARCHAR2 (50);
        v_pos_office        VARCHAR2 (50);
        v_log_param         VARCHAR2 (300);
        v_numofrowreturn    NUMBER := 0;
        v_rpt_seq           NUMBER := -1;
        v_sql               CLOB;
        v_sql_channel       VARCHAR2 (50) := '';
        v_sql_saving_channel VARCHAR2 (50) := '';
        v_sql_pos           VARCHAR2 (500);
        v_sql_from_date     VARCHAR2 (50);
        v_sql_to_date       VARCHAR2 (50);
        v_sql_cif           VARCHAR2 (50);
        v_sql_currency      VARCHAR2 (50);
        v_sql_ccy      VARCHAR2 (50);
        v_sql_saving_currency      VARCHAR2 (50);
        v_date_format       VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
        v_transaction_type VARCHAR2 (50);
        v_transaction_type_saving VARCHAR2 (50);
        v_sql_0_or_1 VARCHAR2 (50);
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);
      
      --ADD TYPE CO PHAI LA VR HAY KHONG  
        IF p_trans_type IS NOT NULL
        THEN 
            IF p_trans_type = '1'  THEN        
               v_transaction_type :=' AND h.IS_VR_TRAN =''N'''; 
               v_transaction_type_saving :=' AND h1.IS_VR_TRAN =''N''';
            ELSIF p_trans_type = '2' THEN        
               v_transaction_type :=' AND h.IS_VR_TRAN = ''Y''';  
               v_transaction_type_saving :=' AND h1.IS_VR_TRAN =''Y''';
           END IF;
        END IF;
        
        IF p_channel IS NOT NULL
        THEN 
            IF p_channel = 'IB'  THEN        
               v_sql_0_or_1 :=' AND ''0'' =''1''';
            ELSIF p_channel = 'MB' THEN        
               v_sql_0_or_1 :=' AND ''1'' =''1''';
           END IF;
        END IF;
        
        IF p_currency_code IS NOT NULL
        THEN
            v_sql_ccy := ' and h.ccy =''' || p_currency_code || '''';
            v_sql_currency := ' and h.currency_code =''' || p_currency_code || '''';
            v_sql_saving_currency := ' and info.currency_code =''' || p_currency_code || '''';
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and h.channel_code =''' || p_channel || '''';
            v_sql_saving_channel := ' and h1.channel_code =''' || p_channel || '''';
        END IF;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and bc.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_cif_no IS NOT NULL
        THEN
            v_sql_cif := ' and bc.user_name =''' || p_cif_no || '''';
        END IF;

        /*IF p_pos IS NOT NULL THEN

          IF INSTR(p_pos,',') > 0 THEN
            v_sql_pos:= ' and b.sign_org IN (''' || REPLACE(p_pos,',',''',''') || ''')';
          ELSE
            v_sql_pos:= ' and b.sign_org = ''' || p_pos || '''';
          END IF;
        END IF;*/

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_sum_transaction);
        END IF;

        v_log_param :=
            'i_currency_code:'
            || p_currency_code
            ||  ',i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || p_pos
            || ',i_cif_no:'
            || p_cif_no
            || ',i_bank_no:'
            || p_bank_no;



        v_sql :=
            'select e.currency_code,
       e.TRANSFER_TYPE,
       e.status_total,
       e.status_SUCESS,
       e.status_FAIL,
       e.amount_TOTAL,
       e.amount_SUCESS,
       e.amount_FEE,
       e.amount_VAT,
       e.amount_DISCOUNT,
       e.amount_FAIL,
       (select count(distinct h.user_id)
           from bc_transfer_history h left join  bk_account_info info on h.rollout_account_no=info.acct_no
           left join bc_user_info bc on h.user_id = bc.user_id 
         where 1 = 1
         and h.status IN (''SUCC'',''FAIL'')
        and e.TRANSFER_TYPE = decode(h.service_type,''TR'',
                              decode(h.is_inter_bank, ''N'', ''CKNB'',''Y'',''CKNNH''),
                              ''TS'', ''BNT'',
                              ''QR'', ''ATM'', 
                              ''TQ'',''CHUYENTIENNHANH'',
                              ''TW'',''CHUYENTIENVAOVI'',
                              ''TN'',''CHUYETIENQUOCTE'', 
                              ''PT'',''CHUYENTIENQUASDT'', 
                              ''TT'', ''CKSML'',
                              ''TC'',''CKCMT'')
           and h.currency_code = e.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_TOTAL,
       (select count(distinct h.user_id)
           from bc_transfer_history h left join  bk_account_info info on h.rollout_account_no=info.acct_no
           left join bc_user_info bc on h.user_id = bc.user_id 
           where 1 = 1
         and  h.status = ''SUCC''
           and e.TRANSFER_TYPE = decode(h.service_type,''TR'',
                              decode(h.is_inter_bank, ''N'', ''CKNB'',''Y'',''CKNNH''),
                              ''TS'', ''BNT'',
                              ''QR'', ''ATM'', 
                              ''TQ'',''CHUYENTIENNHANH'',
                              ''TW'',''CHUYENTIENVAOVI'',
                              ''TN'',''CHUYETIENQUOCTE'', 
                              ''PT'',''CHUYENTIENQUASDT'', 
                              ''TT'', ''CKSML'',
                              ''TC'',''CKCMT'')
           and h.currency_code = e.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_SUCESS,
       (select count(distinct h.user_id)
           from bc_transfer_history h left join  bk_account_info info on h.rollout_account_no=info.acct_no
           left join bc_user_info bc on h.user_id = bc.user_id 
           where 1 = 1
         and (h.status != ''SUCC'')
           and e.TRANSFER_TYPE = decode(h.service_type,''TR'',
                              decode(h.is_inter_bank, ''N'', ''CKNB'',''Y'',''CKNNH''),
                              ''TS'', ''BNT'',
                              ''QR'', ''ATM'', 
                              ''TQ'',''CHUYENTIENNHANH'',
                              ''TW'',''CHUYENTIENVAOVI'',
                              ''TN'',''CHUYETIENQUOCTE'', 
                              ''PT'',''CHUYENTIENQUASDT'', 
                              ''TT'', ''CKSML'',
                              ''TC'',''CKCMT'')
          and h.currency_code = e.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
         ) as user_FAIL
  from (select d.currency_code,d.TRANSFER_TYPE TRANSFER_TYPE,
               sum(d.status_total) status_total,
               sum(d.status_SUCESS) status_SUCESS,
               sum(d.status_FAIL) status_FAIL,
               sum(d.amount_TOTAL) amount_TOTAL,
               sum(d.amount_SUCESS) amount_SUCESS,
               sum(d.amount_FEE) amount_FEE,
               sum(d.amount_VAT) amount_VAT,
               sum(d.amount_DISCOUNT) amount_DISCOUNT,
               sum(d.amount_FAIL) amount_FAIL
          from (select h.currency_code,decode(h.service_type,''TR'',
                                              decode(h.is_inter_bank,''N'',''CKNB'',''Y'',''CKNNH''),
                                                    ''TS'', ''BNT'',
                                                    ''QR'', ''ATM'',
                                                    ''TT'',''CKSML'',
                                                    ''TQ'',''CHUYENTIENNHANH'',
                                                    ''TW'',''CHUYENTIENVAOVI'',
                                                    ''TN'',''CHUYETIENQUOCTE'', 
                                                    ''PT'',''CHUYENTIENQUASDT'', 
                                                    ''TC'', ''CKCMT'') 
                                                    as TRANSFER_TYPE,  
                       count(h.status) as status_total,
                       sum(decode(h.status, ''SUCC'', 1, 0)) as status_SUCESS,
                       sum(decode(h.status, ''SUCC'', 0, 1)) as status_FAIL,
                       sum(h.amount) as amount_TOTAL,
                       sum(decode(h.status, ''SUCC'', h.amount, 0)) as amount_SUCESS,
                       sum(decode(h.status, ''SUCC'', h.fee, 0))    as amount_FEE,
                       sum(decode(h.status, ''SUCC'', h.vat, 0))    as amount_VAT,
                       0    as amount_DISCOUNT,
                       sum(decode(h.status, ''SUCC'', 0, h.amount)) as amount_FAIL
                  from bc_transfer_history h left join bk_account_info info on h.rollout_account_no=info.acct_no
                  left join bc_user_info bc on h.user_id = bc.user_id 
                  where 1 = 1
                  and h.is_schedule = ''N''
                  and h.is_batch = ''N''
                  and  h.status IN (''SUCC'',''FAIL'') '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_transaction_type
                || v_sql_currency
                ||' group by h.currency_code,h.service_type, h.user_id, h.is_inter_bank) d where d.TRANSFER_TYPE is not null and d.currency_code is not null 
         group by d.currency_code,d.TRANSFER_TYPE) e
union all
select f.currency_code,
       f.TRANSFER_TYPE,
       f.status_total,
       f.status_SUCESS,
       f.status_FAIL,
       f.amount_TOTAL,
       f.amount_SUCESS,
       f.amount_FEE,
       f.amount_VAT,
       f.amount_DISCOUNT,
       f.amount_FAIL,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
          and h.status IN(''SUCC'',''FAIL'')
           and h.is_schedule = ''Y''
           and f.TRANSFER_TYPE = decode(h.is_schedule, ''Y'', ''CKDK'', ''N'')
           and h.currency_code = f.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_TOTAL,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
          and h.is_schedule = ''Y''
           and h.status = ''SUCC''
           and f.TRANSFER_TYPE = decode(h.is_schedule, ''Y'', ''CKDK'', ''N'')
           and h.currency_code = f.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_SUCESS,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
           and h.is_schedule = ''Y''
           and (h.status != ''SUCC'')
           and f.TRANSFER_TYPE = decode(h.is_schedule, ''Y'', ''CKDK'', ''N'')
           and h.currency_code = f.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_FAIL
  from (select d.currency_code,
               d.TRANSFER_TYPE TRANSFER_TYPE,
               sum(d.status_total) status_total,
               sum(d.status_SUCESS) status_SUCESS,
               sum(d.status_FAIL) status_FAIL,
               sum(d.amount_TOTAL) amount_TOTAL,
               sum(d.amount_SUCESS) amount_SUCESS,
               sum(d.amount_FEE) amount_FEE,
               sum(d.amount_VAT) amount_VAT,
               sum(d.amount_DISCOUNT) amount_DISCOUNT,
               sum(d.amount_FAIL) amount_FAIL
          from (select h.currency_code,
                       decode(h.is_schedule, ''Y'', ''CKDK'', ''N'') as TRANSFER_TYPE,
                       count(h.status) as status_total,
                       sum(decode(h.status, ''SUCC'', 1, 0)) as status_SUCESS,
                       sum(decode(h.status, ''SUCC'', 0, 1)) as status_FAIL,
                       sum(h.amount) as amount_TOTAL,
                       sum(decode(h.status, ''SUCC'', h.amount, 0)) as amount_SUCESS,
                       sum(decode(h.status, ''SUCC'', h.fee, 0)) as amount_FEE,
                       sum(decode(h.status, ''SUCC'', h.vat, 0)) as amount_VAT,
                       0 amount_DISCOUNT,
                       sum(decode(h.status, ''SUCC'', 0, h.amount)) as amount_FAIL
                  from bc_transfer_history h , bc_user_info bc
                 where h.user_id = bc.user_id
                 and h.is_schedule = ''Y''
                   and h.status IN (''SUCC'',''FAIL'') '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                || v_transaction_type
                ||'
                 group by h.currency_code,
                          h.service_type,
                          h.user_id,
                          h.is_inter_bank,
                          h.is_schedule) d
         group by d.currency_code,d.TRANSFER_TYPE) f

union all
select g.currency_code,g.TRANSFER_TYPE,
       g.status_total,
       g.status_SUCESS,
       g.status_FAIL,
       g.amount_TOTAL,
       g.amount_SUCESS,
       g.amount_FEE,
       g.amount_VAT,
       g.amount_DISCOUNT,
       g.amount_FAIL,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
          and h.is_batch = ''Y''
           and h.status IN (''SUCC'',''FAIL'')
           and g.TRANSFER_TYPE = decode(h.is_batch, ''Y'', ''CKTL'', ''N'')
           and h.currency_code = g.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_TOTAL,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
          and h.is_batch = ''Y''
           and h.status = ''SUCC''
           and g.TRANSFER_TYPE = decode(h.is_batch, ''Y'', ''CKTL'', ''N'')
           and h.currency_code = g.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_SUCESS,
       (select count(distinct h.user_id)
          from bc_transfer_history h , bc_user_info bc
          where h.user_id = bc.user_id
          and h.is_batch = ''Y''
           and (h.status != ''SUCC'' )
           and g.TRANSFER_TYPE = decode(h.is_batch, ''Y'', ''CKTL'', ''N'')
           and h.currency_code = g.currency_code '
          || 'and h.create_time >= to_date('''
          || v_sql_from_date
          || ''','''
          || v_date_format
          || ''')'
          || '
         and h.create_time <= to_date('''
          || v_sql_to_date
          || ''','''
          || v_date_format
          || ''')'
          || v_sql_cif
          || v_sql_channel
          || v_sql_pos
          || v_transaction_type
          ||'
        ) as user_FAIL
  from (select d.currency_code,
               d.TRANSFER_TYPE TRANSFER_TYPE,
               sum(d.status_total) status_total,
               sum(d.status_SUCESS) status_SUCESS,
               sum(d.status_FAIL) status_FAIL,
               sum(d.amount_TOTAL) amount_TOTAL,
               sum(d.amount_SUCESS) amount_SUCESS,
               sum(d.amount_FEE) amount_FEE,
               sum(d.amount_VAT) amount_VAT,
               sum(d.amount_DISCOUNT) amount_DISCOUNT,
               sum(d.amount_FAIL) amount_FAIL
          from (select h.currency_code,
                       decode(h.is_batch, ''Y'', ''CKTL'', ''N'') as TRANSFER_TYPE,
                       count(h.status) as status_total,
                       sum(decode(h.status, ''SUCC'', 1, 0)) as status_SUCESS,
                       sum(decode(h.status, ''SUCC'', 0, 1)) as status_FAIL,
                       sum(h.amount) as amount_TOTAL,
                       sum(decode(h.status, ''SUCC'', h.amount, 0)) as amount_SUCESS,
                       sum(decode(h.status, ''SUCC'', h.fee, 0)) as amount_FEE,
                       sum(decode(h.status, ''SUCC'', h.vat, 0)) as amount_VAT,
                       0 amount_DISCOUNT,
                       sum(decode(h.status, ''SUCC'', 0,h.amount)) as amount_FAIL
                  from bc_transfer_history h , bc_user_info bc
                 where h.user_id = bc.user_id
                   and h.is_batch = ''Y''
                   and h.status IN(''SUCC'',''FAIL'') '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                || v_transaction_type
                ||'
                 group by h.currency_code,
                          h.service_type,
                          h.user_id,
                          h.is_inter_bank,
                          h.is_batch) d
         group by d.currency_code,d.TRANSFER_TYPE) g
union all
select
    currency_code,
    --bill_name as TRANSFER_TYPE,
    ''TOPUP'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,
            sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            --sv.status = ''ACTV'' and
            (h.service_type=''RG'' and sv.language = ''lo_LA'') and
            h.status IN (''SUCC'',''FAIL'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code--,bill_name
--thanhtoantudong
union all
select
    currency_code,
    ''PAYMENTTD'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
             h.is_schedule = ''Y'' and
            --sv.status = ''ACTV'' and
            (h.service_type=''BP'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code
--thantoanhoadon
union all
select
    currency_code,
    ''PAYMENT'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            h.is_schedule = ''N'' and
            --sv.status = ''ACTV'' and
            (h.service_type=''BP'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code
-- thanhtoanhocphi
union all
select
    currency_code,
    ''THANHTOANTIENHOC'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.ccy as currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discount) as discount,
            --sv.school_name as bill_name, -- ten truong
            --sv.school_no, -- ma truong
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            '''' as service_id
    from
            bc_school_payment h,
            bk_school_category sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and h.school_id=sv.school_id '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_ccy
              || v_transaction_type
              ||'
     group by h.ccy, h.status--, sv.school_no, sv.school_name -- ma truong
)   
group by currency_code

-- end thanhtoanhocphi
union all
select
    currency_code,
    ''THUEDAT'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            --sv.status = ''ACTV'' and
            (h.service_type=''LP'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code


union all
select
    currency_code,
    ''THUEDUONGBO'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            --sv.status = ''ACTV'' and
            (h.service_type=''RP'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code

--start thu ho tai chinh tieu dung
union all
select
    currency_code,
    ''THUHOTAICHINHTIEUDUNG'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            --sv.status = ''ACTV'' and
            (h.service_type=''IP'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code
--end thu ho tai chinh tieu dung

--start rut tien atm qr
union all
select
    currency_code,
    ''ATMQR'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discounted_amt) as discount,
            sv.full_name as bill_name,
            h.service_code,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.USER_ID) as customer,
            h.service_id
    from
            bc_bill_payment_history h,
            bk_service_list sv,
            bc_user_info bc
    where
            h.user_id = bc.user_id and
            sv.service_id = h.service_id  and
            --sv.status = ''ACTV'' and
            (h.service_type=''WA'' and sv.language = ''lo_LA'')  '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_channel
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status,
h.service_name,
h.service_code,
sv.full_name,
h.service_id)   group by currency_code
--end rut tien atm qr

-- start muaxoso
union all
select
    currency_code,
    ''MUAXOSO'' as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code as currency_code,sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.discount) as discount,
            h.status,
            count(0) as trans,
            COUNT(DISTINCT h.create_by) as customer
    from
            bc_buy_lottery_history h,
            bc_user_info bc
    where
            h.create_by = bc.user_id '
              || '
             and h.create_time >= to_date('''
              || v_sql_from_date
              || ''','''
              || v_date_format
              || ''')'
              || '
             and h.create_time <= to_date('''
              || v_sql_to_date
              || ''','''
              || v_date_format
              || ''')'
              || v_sql_cif
              || v_sql_0_or_1
              || v_sql_pos
              || v_sql_currency
              || v_transaction_type
              ||'
     group by h.currency_code, h.status
)   
group by currency_code
-- end muaxoso

union all
select h.currency_code,
       h.TRANSFER_TYPE,
       h.status_total,
       h.status_SUCESS,
       h.status_FAIL,
       h.amount_TOTAL,
       h.amount_SUCESS,
       h.amount_FEE,
       h.amount_VAT,
       h.amount_DISCOUNT,
       h.amount_FAIL,
       (select count(distinct h1.user_id)
          from bc_onl_sav_opening_hist h1  left join bk_account_info info on h1.rollout_account_no=info.acct_no left join bc_user_info bc on h1.user_id = bc.user_id
         where 1 =1   
         and h1.currency_code = h.currency_code'
                || '
               and h1.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h1.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_saving_channel
                || v_sql_pos
                || v_sql_saving_currency
                || v_transaction_type_saving
                ||'
           ) as user_TOTAL,
       (select count(distinct h1.user_id)
          from bc_onl_sav_opening_hist h1  left join bk_account_info info on h1.rollout_account_no=info.acct_no left join bc_user_info bc on h1.user_id = bc.user_id
         where 1 = 1
        and h1.status = ''SUCC'' and h1.currency_code = h.currency_code '
                || '
               and h1.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h1.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_saving_channel
                || v_sql_pos
                || v_sql_saving_currency
                || v_transaction_type_saving
                ||'
        ) as user_SUCESS,
       (select count(distinct h1.user_id)
         from bc_onl_sav_opening_hist h1  left join bk_account_info info on h1.rollout_account_no=info.acct_no left join bc_user_info bc on h1.user_id = bc.user_id
        where 1 = 1
           and (h1.status != ''SUCC'') and h1.currency_code = h.currency_code  '
                || '
               and h1.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h1.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_saving_channel
                || v_sql_pos
                || v_sql_saving_currency
                || v_transaction_type_saving
                ||'
        ) as user_FAIL
  from (select d.currency_code,
               ''SC'' TRANSFER_TYPE,
               sum(d.status_total) status_total,
               sum(d.status_SUCESS) status_SUCESS,
               sum(d.status_FAIL) status_FAIL,
               sum(d.amount_TOTAL) amount_TOTAL,
               sum(d.amount_SUCESS) amount_SUCESS,
               sum(d.amount_FEE) amount_FEE,
               sum(d.amount_VAT) amount_VAT,
               sum(d.amount_DISCOUNT) amount_DISCOUNT,
               sum(d.amount_FAIL) amount_FAIL
          from (select h.currency_code,
                       --h.receipt_product_name as TRANSFER_TYPE,
                       count(h.status) as status_total,
                       sum(decode(h.status, ''SUCC'', 1, 0)) as status_SUCESS,
                       sum(decode(h.status, ''SUCC'', 0, 1)) as status_FAIL,
                       sum(h.amount) as amount_TOTAL,
                       sum(decode(h.status, ''SUCC'', h.amount, 0)) as amount_SUCESS,
                       sum(decode(h.status, ''SUCC'', h.fee, 0)) as amount_FEE,
                       0 amount_VAT,
                       0 amount_DISCOUNT,
                       sum(decode(h.status, ''SUCC'', 0, h.amount )) as amount_FAIL
                  from bc_onl_sav_opening_hist h  left join bk_account_info info on h.rollout_account_no=info.acct_no left join bc_user_info bc on h.user_id = bc.user_id
                  where 1 = 1  '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_saving_currency
                || v_transaction_type
                ||'
                 group by --h.receipt_product_name, 
                 h.user_id,h.currency_code) d
         group by --d.TRANSFER_TYPE,
         d.currency_code) h
union all
select i.currency_code,
       i.TRANSFER_TYPE,
       i.status_total,
       i.status_SUCESS,
       i.status_FAIL,
       i.amount_TOTAL,
       i.amount_SUCESS,
       i.amount_FEE,
       i.amount_VAT,
       i.amount_DISCOUNT,
       i.amount_FAIL,
       (select count(distinct c.user_id)
          from (select h.* from bc_onl_sav_sett_hist h left join bk_account_info info on  h.rollin_account_no=info.acct_no where 1=1  '
                  || '
                 and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_channel
                  || v_sql_saving_currency
                  || v_transaction_type
                  ||'
          ) c
          left join bk_receipt_info r on r.receipt_no = c.saving_receipt_no
          left join bk_receipt_product rp on rp.product_code = r.product_code and rp.language = ''lo_LA''
          left join bc_user_info bc on c.user_id = bc.user_id
         where --rp.product_name = i.TRANSFER_TYPE
         c.currency_code = i.currency_code '
         || v_sql_cif||
         ' ) as user_TOTAL,
          (select count(distinct c.user_id)
          from (select h.* from bc_onl_sav_sett_hist h left join bk_account_info info on  h.rollin_account_no=info.acct_no where 1=1  '
                  || '
                 and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_channel
                  || v_sql_saving_currency
                  || v_transaction_type
                  ||'
          ) c
          left join bk_receipt_info r on r.receipt_no = c.saving_receipt_no
          left join bk_receipt_product rp on rp.product_code = r.product_code and rp.language = ''lo_LA''
           left join bc_user_info bc on c.user_id = bc.user_id
         where --rp.product_name = i.TRANSFER_TYPE
         c.currency_code = i.currency_code
          and c.status = ''SUCC'' '
         || v_sql_cif||
         '
           ) as user_SUCESS,
       (select count(distinct c.user_id)
          from (select h.* from bc_onl_sav_sett_hist h left join bk_account_info info on  h.rollin_account_no=info.acct_no where 1=1  '
                  || '
                 and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_channel
                  || v_sql_saving_currency
                  || v_transaction_type
                  ||'
          ) c
          left join bk_receipt_info r on r.receipt_no = c.saving_receipt_no
          left join bk_receipt_product rp on rp.product_code = r.product_code and rp.language = ''lo_LA''
          left join bc_user_info bc on c.user_id = bc.user_id
         where --rp.product_name = i.TRANSFER_TYPE
           c.currency_code = i.currency_code
           and (c.status != ''SUCC'') '
         || v_sql_cif||
         '
           ) as user_FAIL
  from (select d.currency_code,
               ''SS'' TRANSFER_TYPE,
               sum(d.status_total) status_total,
               sum(d.status_SUCESS) status_SUCESS,
               sum(d.status_FAIL) status_FAIL,
               sum(d.amount_TOTAL) amount_TOTAL,
               sum(d.amount_SUCESS) amount_SUCESS,
               sum(d.amount_FEE) amount_FEE,
               sum(d.amount_VAT) amount_VAT,
               sum(d.amount_DISCOUNT) amount_DISCOUNT,
               sum(d.amount_FAIL) amount_FAIL
          from (select c.currency_code,
                       --rp.product_name as TRANSFER_TYPE,
                       count(c.status) as status_total,
                       sum(decode(c.status, ''SUCC'', 1, 0)) as status_SUCESS,
                       sum(decode(c.status, ''SUCC'', 0, 1)) as status_FAIL,
                       sum(c.amount) as amount_TOTAL,
                       sum(decode(c.status, ''SUCC'', c.amount, 0)) as amount_SUCESS,
                       sum(decode(c.status, ''SUCC'', c.fee, 0)) as amount_FEE,
                       0 amount_VAT,
                       0 amount_DISCOUNT,
                       sum(decode(c.status, ''SUCC'', 0, c.amount)) as amount_FAIL
                  from (select h.tran_sn, h.core_sn, h.user_id, h.saving_receipt_no,
       h.rollin_account_no, h.amount, h.fee, h.status, h.create_by,
       h.create_time, h.update_by, h.update_time, h.channel_code,
       h.wf_process_id, h.wf_updated_time, h.wf_status, h.wf_taskid,
       h.tc_code, h.tc_run_time, h.settlement_type, h.interest_amount,h.currency_code from bc_onl_sav_sett_hist h left join bk_account_info info on  h.rollin_account_no=info.acct_no where 1=1   '
                  || '
                 and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_channel
                  || v_sql_saving_currency
                  || v_transaction_type
                  ||'
                       ) c
                  left join bk_receipt_info r on r.receipt_no = c.saving_receipt_no
                  left join bk_receipt_product rp on rp.product_code = r.product_code and rp.language = ''lo_LA''
                  left join bc_user_info bc on c.user_id = bc.user_id '
                  || v_sql_pos || v_sql_cif ||
                 ' group by --rp.product_name, 
                 c.user_id,c.currency_code) d
         group by --d.TRANSFER_TYPE,
         d.currency_code) i';

        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO
                  v_sum_transaction_out.currency_code,
                  v_sum_transaction_out.transfer_type,
                   v_sum_transaction_out.status_total,
                   v_sum_transaction_out.status_success,
                   v_sum_transaction_out.status_fail,
                   v_sum_transaction_out.amount_total,
                   v_sum_transaction_out.amount_success,
                   v_sum_transaction_out.amount_fee,
                   v_sum_transaction_out.amount_vat,
                   v_sum_transaction_out.amount_discount,
                   v_sum_transaction_out.amount_fail,
                   v_sum_transaction_out.user_total,
                   v_sum_transaction_out.user_success,
                   v_sum_transaction_out.user_fail;

            v_sum_transaction_out.status_total :=
                NVL (v_sum_transaction_out.status_total, 0);
            v_sum_transaction_out.status_success :=
                NVL (v_sum_transaction_out.status_success, 0);
            v_sum_transaction_out.status_fail :=
                NVL (v_sum_transaction_out.status_fail, 0);
            v_sum_transaction_out.amount_total :=
                NVL (v_sum_transaction_out.amount_total, 0);
            v_sum_transaction_out.amount_success :=
                NVL (v_sum_transaction_out.amount_success, 0);
            v_sum_transaction_out.amount_fail :=
                NVL (v_sum_transaction_out.amount_fail, 0);
            v_sum_transaction_out.amount_fee :=
                NVL (v_sum_transaction_out.amount_fee, 0);
            v_sum_transaction_out.amount_vat :=
                NVL (v_sum_transaction_out.amount_vat, 0);
            v_sum_transaction_out.amount_discount :=
                NVL (v_sum_transaction_out.amount_discount, 0);
            v_sum_transaction_out.user_total :=
                NVL (v_sum_transaction_out.user_total, 0);
            v_sum_transaction_out.user_success :=
                NVL (v_sum_transaction_out.user_success, 0);
            v_sum_transaction_out.user_fail :=
                NVL (v_sum_transaction_out.user_fail, 0);

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_sum_transaction_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_sum_transaction,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END retail_sum_transaction;

    FUNCTION corp_sum_transaction (p_currency_code   VARCHAR2,
                                  p_from_date      timestamp,
                                  p_to_date        timestamp,
                                  p_channel        VARCHAR2,
                                  p_pos            VARCHAR2,
                                  p_cif_no         VARCHAR2,
                                  p_bank_no        VARCHAR2)
        RETURN tbl_sum_transaction
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_sum_transaction_out row_sum_transaction
                := row_sum_transaction (NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL,
                                     NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur               ref_;
        v_org_no            VARCHAR2 (50);
        v_pos_office        VARCHAR2 (50);
        v_log_param         VARCHAR2 (300);
        v_numofrowreturn    NUMBER := 0;
        v_rpt_seq           NUMBER := -1;
        v_sql               CLOB;
        v_sql_channel       VARCHAR2 (50) := '';
        v_sql_pos           VARCHAR2 (500);
        v_sql_from_date     VARCHAR2 (50);
        v_sql_to_date       VARCHAR2 (50);
        v_sql_cif           VARCHAR2 (50);
        v_sql_currency      VARCHAR2 (50);
        v_sql_saving_currency      VARCHAR2 (50);
        v_date_format       VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

        IF p_currency_code IS NOT NULL
        THEN
            v_sql_currency := ' and h.currency_code =''' || p_currency_code || '''';
            v_sql_saving_currency := ' and info.currency_code =''' || p_currency_code || '''';
        END IF;

        IF p_channel IS NOT NULL
        THEN
            v_sql_channel := ' and h.channel_code =''' || p_channel || '''';
        END IF;

        v_pos_office := sys_common_rpt.get_pos_office;

        IF p_pos != v_pos_office
        THEN
            v_sql_pos := ' and ci.sign_org IN (';

            OPEN v_cur FOR
                SELECT   org_no
                  FROM   table (list_pos_by_branch (p_pos, p_bank_no,'',''));

            LOOP
                FETCH v_cur INTO v_org_no;

                EXIT WHEN v_cur%NOTFOUND;
                v_sql_pos := v_sql_pos || '''' || v_org_no || ''',';
            END LOOP;

            CLOSE v_cur;

            v_sql_pos := SUBSTR (v_sql_pos, 0, LENGTH (v_sql_pos) - 1) || ')';
        END IF;

        IF p_cif_no IS NOT NULL
        THEN
            v_sql_cif := ' and ci.cif_no =''' || p_cif_no || '''';
        END IF;

        /*IF p_pos IS NOT NULL THEN

          IF INSTR(p_pos,',') > 0 THEN
            v_sql_pos:= ' and b.sign_org IN (''' || REPLACE(p_pos,',',''',''') || ''')';
          ELSE
            v_sql_pos:= ' and b.sign_org = ''' || p_pos || '''';
          END IF;
        END IF;*/

        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_corp_sum_transaction);
        END IF;

        v_log_param :=
            'i_currency_code:'
            || p_currency_code
            ||  ',i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_channel:'
            || p_channel
            || ',i_pos:'
            || p_pos
            || ',i_cif_no:'
            || p_cif_no
            || ',i_bank_no:'
            || p_bank_no;



        v_sql :=
            'SELECT   e.currency_code,
         e.transfer_type,
         e.status_total,
         e.status_sucess,
         e.status_fail,
         e.amount_total,
         e.amount_sucess,
         e.amount_fee,
         e.amount_vat,
         e.amount_discount,
         e.amount_fail,
         (SELECT   COUNT (DISTINCT h.user_id)
           FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                         WHERE   1 = 1
           AND h.status IN (''SUCC'',''FAIL'')
           AND e.transfer_type = DECODE (h.service_type, ''TR'',DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'', 
                                                                                         ''Y'', ''INTERBANK_TRANSFER''),
                                         ''TS'', ''BNT'',
                                         ''QR'', ''ATM'',
                                         ''TQ'',''CHUYENTIENNHANH'',
                                         ''SP'', DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'',
                                                                          ''Y'',''INTERBANK_TRANSFER''),
                                                                          ''TN'',''CTQUOCTE'',
                                                                          ''INTERNAL_TRANSFER'')
                  AND e.currency_code = h.currency_code '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_total,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                         WHERE   1 = 1
                   AND h.status = ''SUCC''
                   AND e.transfer_type = DECODE (h.service_type, ''TR'',
                                                 DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'',
                                                                          ''Y'', ''INTERBANK_TRANSFER''),
                                                ''TS'', ''BNT'',
                                                ''QR'', ''ATM'',
                                                ''TQ'',''CHUYENTIENNHANH'',
                                                ''SP'', DECODE (h.is_inter_bank, ''N'',''INTERNAL_TRANSFER'',
                                                                                 ''Y'',''INTERBANK_TRANSFER''),
                                                                                  ''TN'',''CTQUOCTE'',''INTERNAL_TRANSFER'')
                   AND e.currency_code = h.currency_code '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
             )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                         WHERE   1 = 1
                   AND (h.status = ''FAIL'')
                   AND e.transfer_type = DECODE (h.service_type, ''TR'',
                                                 DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'',
                                                                          ''Y'', ''INTERBANK_TRANSFER''),
                                                ''TS'', ''BNT'',
                                                ''QR'', ''ATM'',
                                                ''TQ'',''CHUYENTIENNHANH'',
                                                ''SP'', DECODE (h.is_inter_bank, ''N'',''INTERNAL_TRANSFER'',
                                                                                 ''Y'',''INTERBANK_TRANSFER''),
                                                                                  ''TN'',''CTQUOCTE'',''INTERNAL_TRANSFER'')
                   AND e.currency_code = h.currency_code
                   '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
             )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   h.currency_code,DECODE (h.service_type, ''TR'',
                                                        DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'',
                                                                                 ''Y'', ''INTERBANK_TRANSFER''),
                                                ''TS'', ''BNT'',
                                                ''QR'', ''ATM'',
                                                ''TQ'',''CHUYENTIENNHANH'',
                                                ''SP'',  DECODE (h.is_inter_bank, ''N'', ''INTERNAL_TRANSFER'',
                                                                                  ''Y'', ''INTERBANK_TRANSFER''),
                                                                                   ''TN'',''CTQUOCTE'',''INTERNAL_TRANSFER'')
                                     AS transfer_type,
                                 COUNT (h.status) AS status_total,
                                 SUM (DECODE (h.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (h.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (h.amount) AS amount_total,
                                 SUM (DECODE (h.status, ''SUCC'', h.amount, 0))
                                     AS amount_sucess,
                                 SUM (DECODE (h.status, ''SUCC'', h.fee, 0))
                                     AS amount_fee,
                                 SUM (DECODE (h.status, ''SUCC'', h.vat, 0))
                                     AS amount_VAT,
                                 0 AS amount_DISCOUNT,
                                 SUM (DECODE (h.status, ''FAIL'', h.amount, 0))
                                     AS amount_fail
                          FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                         WHERE   1 = 1
                                 AND h.status IN (''SUCC'',''FAIL'')'
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                ||'
                GROUP BY   h.currency_code,h.service_type, h.user_id, h.is_inter_bank) d where d.transfer_type is not null and d.currency_code is not null
          GROUP BY   d.currency_code,d.transfer_type) e
UNION ALL
SELECT   f.currency_code,
         f.transfer_type,
         f.status_total,
         f.status_sucess,
         f.status_fail,
         f.amount_total,
         f.amount_sucess,
         f.amount_fee,
         f.amount_vat,
         f.amount_discount,
         f.amount_fail,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.status IN(''SUCC'',''FAIL'')
                   AND h.is_schedule = ''Y''
                   AND f.transfer_type = DECODE (h.is_schedule, ''Y'', ''SCHEDULE_TRANSFER'', ''N'')
                   AND f.currency_code = h.currency_code
                '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
             )
             AS user_total,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.is_schedule = ''Y'' AND h.status = ''SUCC''
                   AND f.transfer_type = DECODE (h.is_schedule, ''Y'', ''SCHEDULE_TRANSFER'', ''N'')
                   AND f.currency_code = h.currency_code
                   '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.is_schedule = ''Y'' AND (h.status = ''FAIL'')
                   AND f.transfer_type = DECODE (h.is_schedule, ''Y'', ''SCHEDULE_TRANSFER'', ''N'')
                   AND f.currency_code = h.currency_code
                   '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   h.currency_code,DECODE (h.is_schedule, ''Y'', ''SCHEDULE_TRANSFER'', ''N'') AS transfer_type,
                                 COUNT (h.status) AS status_total,
                                 SUM (DECODE (h.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (h.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (h.amount) AS amount_total,
                                 SUM (DECODE (h.status, ''SUCC'', h.amount, 0))
                                     AS amount_sucess,
                                 SUM (DECODE (h.status, ''SUCC'', h.fee, 0))
                                     AS amount_fee,
                                 SUM (DECODE (h.status, ''SUCC'', h.vat, 0))
                                     AS amount_VAT,
                                 0 AS amount_DISCOUNT,
                                 SUM (DECODE (h.status, ''FAIL'', h.amount, 0))
                                     AS amount_fail
                           FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                                 WHERE 1 = 1
                                 AND h.service_type <> ''CC'' AND h.is_schedule = ''Y''
                                 AND h.status IN (''SUCC'',''FAIL'',''OPTL'',''UPTL'',''OPDL'') '
                      || '
                     and h.create_time >= to_date('''
                      || v_sql_from_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || '
                     and h.create_time <= to_date('''
                      || v_sql_to_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || v_sql_cif
                      || v_sql_channel
                      || v_sql_pos
                      || v_sql_currency
                      ||'
                      GROUP BY   h.currency_code,h.service_type,
                                 h.user_id,
                                 h.is_inter_bank,
                                 h.is_schedule) d
          GROUP BY   d.currency_code,d.transfer_type) f
UNION ALL
SELECT   g.currency_code,
         g.transfer_type,
         g.status_total,
         g.status_sucess,
         g.status_fail,
         g.amount_total,
         g.amount_sucess,
         g.amount_fee,
         g.amount_vat,
         g.amount_discount,
         g.amount_fail,
         (SELECT   COUNT (DISTINCT h.user_id) 
            FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type IN (''TR'',''TS'',''QR'')
                   AND h.is_batch = ''Y''
                   AND h.status IN (''SUCC'',''FAIL'')
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'', ''BATCH_TRANSFER'', ''N'')
                   AND g.currency_code = h.currency_code  '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_total,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type IN (''TR'',''TS'',''QR'')
                   AND h.is_batch = ''Y''
                   AND h.status = ''SUCC''
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'', ''BATCH_TRANSFER'', ''N'')
                   AND g.currency_code = h.currency_code '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type IN (''TR'',''TS'',''QR'')
                   AND h.is_batch = ''Y''
                   AND (h.status = ''FAIL'')
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'', ''BATCH_TRANSFER'', ''N'')
                   AND g.currency_code = h.currency_code '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   h.currency_code,DECODE (h.is_batch, ''Y'',''BATCH_TRANSFER'', ''N'') AS transfer_type,
                                 COUNT (h.status) AS status_total,
                                 SUM (DECODE (h.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (h.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (h.amount) AS amount_total,
                                 SUM (DECODE (h.status, ''SUCC'', h.amount, 0))
                                     AS amount_sucess,
                                 SUM (DECODE (h.status, ''SUCC'', h.fee, 0))
                                     AS amount_fee,
                                 SUM (DECODE (h.status, ''SUCC'', h.vat, 0))
                                     AS amount_VAT,
                                 0 AS amount_DISCOUNT,
                                 SUM (DECODE (h.status, ''FAIL'', h.amount, 0))
                                     AS amount_fail
                           FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                                 WHERE 1 = 1
                                 AND h.service_type IN (''TR'',''TS'',''QR'')
                                 AND h.is_batch = ''Y''
                                 AND h.status IN (''SUCC'',''FAIL'') '
                      || '
                     and h.create_time >= to_date('''
                      || v_sql_from_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || '
                     and h.create_time <= to_date('''
                      || v_sql_to_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || v_sql_cif
                      || v_sql_channel
                      || v_sql_pos
                      || v_sql_currency
                      ||'
                      GROUP BY   h.currency_code,h.service_type,
                                 h.user_id,
                                 h.is_inter_bank,
                                 h.is_batch) d
          GROUP BY   d.currency_code,d.transfer_type) g
UNION ALL
SELECT   g.currency_code,
         g.transfer_type,
         g.status_total,
         g.status_sucess,
         g.status_fail,
         g.amount_total,
         g.amount_sucess,
         g.amount_fee,
         g.amount_vat,
         g.amount_discount,
         g.amount_fail,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type = ''SP'' AND h.is_batch = ''Y''
                   AND h.status IN (''SUCC'',''FAIL'',''OPTL'',''UPTL'',''OPDL'')
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'',''SALARY_PAYMENT'', ''N'')
                   AND g.currency_code = h.currency_code  '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_total,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type = ''SP''
                   AND h.is_batch = ''Y''
                   AND h.status = ''SUCC''
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'', ''SALARY_PAYMENT'', ''N'')
                   AND g.currency_code = h.currency_code  '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT h.user_id)
             FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
           WHERE 1 = 1
                   AND h.service_type = ''SP'' AND h.is_batch = ''Y''
                   AND h.status IN(''FAIL'',''OPTL'',''UPTL'',''OPDL'')
                   AND g.transfer_type = DECODE (h.is_batch, ''Y'', ''SALARY_PAYMENT'', ''N'')
                   AND g.currency_code = h.currency_code  '
                  || 'and h.create_time >= to_date('''
                  || v_sql_from_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || '
                 and h.create_time <= to_date('''
                  || v_sql_to_date
                  || ''','''
                  || v_date_format
                  || ''')'
                  || v_sql_cif
                  || v_sql_channel
                  || v_sql_pos
                  ||'
              )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   h.currency_code,DECODE (h.is_batch, ''Y'', ''SALARY_PAYMENT'', ''N'') AS transfer_type,
                                 COUNT (h.status) AS status_total,
                                 SUM (DECODE (h.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (h.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (h.amount) AS amount_total,
                                 SUM (DECODE (h.status, ''SUCC'', h.amount, 0))
                                     AS amount_sucess,
                                 SUM (DECODE (h.status, ''SUCC'', h.fee, 0))
                                     AS amount_fee,
                                 SUM (DECODE (h.status, ''SUCC'', h.vat, 0))
                                     AS amount_VAT,
                                 0 AS amount_DISCOUNT,
                                 SUM (DECODE (h.status, ''FAIL'', h.amount, 0))
                                     AS amount_fail
                          FROM   bb_transfer_history h left join  bb_corp_info ci on h.corp_id = ci.corp_id
                                 WHERE 1 = 1
                                 AND h.service_type = ''SP''
                                 AND h.is_batch = ''Y''
                                 AND h.status IN(''SUCC'',''FAIL'') '
                      || '
                     and h.create_time >= to_date('''
                      || v_sql_from_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || '
                     and h.create_time <= to_date('''
                      || v_sql_to_date
                      || ''','''
                      || v_date_format
                      || ''')'
                      || v_sql_cif
                      || v_sql_channel
                      || v_sql_pos
                      || v_sql_currency
                      ||'
                      GROUP BY   h.currency_code,
                                 h.service_type,
                                 h.user_id,
                                 h.is_inter_bank,
                                 h.is_batch) d
          GROUP BY   d.currency_code,d.transfer_type) g
UNION ALL
select
    currency_code,bill_name as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,
            sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.DISCOUNTED_AMT) as discount,
            ''BILL_PAYMENT'' as bill_name,
            h.status,
            count(0) trans,
            COUNT(DISTINCT USER_ID) as customer,
            h.user_id
    from
            bb_bill_payment_history h,
            bk_service_list sv,
            bb_corp_info ci
    where   h.corp_id = ci.corp_id and
            sv.service_id = h.service_id  and
            (sv.service_type=''BP'' and sv.language = ''lo_LA'')   '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                ||'
     group by h.currency_code,h.status,h.user_id)
     group by currency_code,bill_name
     
     UNION ALL
select
    currency_code,bill_name as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,
            sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.DISCOUNTED_AMT) as discount,
            ''THUEDAT'' as bill_name,
            h.status,
            count(0) trans,
            COUNT(DISTINCT USER_ID) as customer,
            h.user_id
    from
            bb_bill_payment_history h,
            bk_service_list sv,
            bb_corp_info ci
    where   h.corp_id = ci.corp_id and
            sv.service_id = h.service_id  and
            (h.service_type=''LP'')'
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                ||'
     group by h.currency_code,h.status,h.user_id)
     group by currency_code,bill_name
     
       UNION ALL
select
    currency_code,bill_name as TRANSFER_TYPE,
    sum(trans) as STATUS_TOTAL,
    sum(decode(STATUS,''SUCC'',trans,0)) as STATUS_SUCESS,
    sum(decode(STATUS,''SUCC'',0,trans)) as STATUS_FAIL,
    sum(amounts) as AMOUNT_TOTAL,
    sum(decode(STATUS,''SUCC'',amounts,0)) as AMOUNT_SUCESS,
    sum(decode(STATUS,''SUCC'',fees,0)) as AMOUNT_FEE,
    sum(decode(STATUS,''SUCC'',vat,0)) as AMOUNT_VAT,
    sum(decode(STATUS,''SUCC'',discount,0)) as AMOUNT_DISCOUNT,
    sum(decode(STATUS,''SUCC'',0,amounts)) AMOUNT_FAIL,
    sum(customer) as USER_TOTAL,
    sum(decode(STATUS,''SUCC'',customer,0)) USER_SUCESS,
    sum(decode(STATUS,''SUCC'',0,customer)) USER_FAIL
from
    (select h.currency_code,
            sum(h.AMOUNT) as amounts,
            sum(h.FEE) as fees,
            sum(h.VAT) as vat,
            sum(h.DISCOUNTED_AMT) as discount,
            ''THUEDUONGBO'' as bill_name,
            h.status,
            count(0) trans,
            COUNT(DISTINCT USER_ID) as customer,
            h.user_id
    from
            bb_bill_payment_history h,
            bk_service_list sv,
            bb_corp_info ci
    where   h.corp_id = ci.corp_id and
            sv.service_id = h.service_id  and
            (h.service_type=''RP'')'
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_currency
                ||'
     group by h.currency_code,h.status,h.user_id)
     group by currency_code,bill_name

union all
SELECT   h.currency_code,
         h.transfer_type,
         h.status_total,
         h.status_sucess,
         h.status_fail,
         h.amount_total,
         h.amount_sucess,
         h.amount_fee,
         h.amount_vat,
         h.amount_discount,
         h.amount_fail,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_saving_opening_history h, bb_corp_info ci, bk_account_info info
                   WHERE h.corp_id = ci.corp_id
                   AND h.acct_no=info.acct_no
                   AND h.receipt_product_name = h.transfer_type
                   AND h.status IN (''SUCC'',''FAIL'')  '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_saving_currency
                ||'
              )
             AS user_total,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_saving_opening_history h, bb_corp_info ci, bk_account_info info
                   WHERE h.corp_id = ci.corp_id
                   AND h.acct_no=info.acct_no
                   AND h.receipt_product_name = h.transfer_type
                   AND h.status = ''SUCC''  '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_saving_currency
                ||'
              )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT h.user_id)
            FROM   bb_saving_opening_history h, bb_corp_info ci, bk_account_info info
                   WHERE h.corp_id = ci.corp_id
                   AND h.acct_no=info.acct_no
                   AND h.receipt_product_name = h.transfer_type
                   AND (h.status = ''FAIL'')  '
                || '
               and h.create_time >= to_date('''
                || v_sql_from_date
                || ''','''
                || v_date_format
                || ''')'
                || '
               and h.create_time <= to_date('''
                || v_sql_to_date
                || ''','''
                || v_date_format
                || ''')'
                || v_sql_cif
                || v_sql_channel
                || v_sql_pos
                || v_sql_saving_currency
                ||'
              )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   info.currency_code,''FD_PLACEMENT_CREATION'' AS transfer_type,
                                 COUNT (h.status) AS status_total,
                                 SUM (DECODE (h.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (h.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (h.amount) AS amount_total,
                                 SUM (DECODE (h.status, ''SUCC'', h.amount, 0))
                                     AS amount_sucess,
                                 SUM (DECODE (h.status, ''SUCC'', h.fee, 0))
                                     AS amount_fee,
                                 0 AS amount_vat,
                                 0 AS amount_discount,
                                 SUM (DECODE (h.status, ''FAIL'', h.amount, 0))
                                     AS amount_fail
                          FROM   bb_saving_opening_history h,
                                 bk_account_info info,
                                 bb_corp_info ci
                                 where   h.corp_id = ci.corp_id
                                 AND h.acct_no = info.acct_no
                                 AND h.status IN (''SUCC'',''FAIL'')'
                          || '
                         and h.create_time >= to_date('''
                          || v_sql_from_date
                          || ''','''
                          || v_date_format
                          || ''')'
                          || '
                         and h.create_time <= to_date('''
                          || v_sql_to_date
                          || ''','''
                          || v_date_format
                          || ''')'
                          || v_sql_cif
                          || v_sql_channel
                          || v_sql_pos
                          || v_sql_saving_currency
                          ||'
                      GROUP BY   info.currency_code,h.receipt_product_name, h.user_id) d
          GROUP BY   d.currency_code,d.transfer_type) h
UNION ALL
SELECT   i.currency_code,
         i.transfer_type,
         i.status_total,
         i.status_sucess,
         i.status_fail,
         i.amount_total,
         i.amount_sucess,
         i.amount_fee,
         i.amount_vat,
         i.amount_discount,
         i.amount_fail,
         (SELECT   COUNT (DISTINCT c.user_id)
            FROM           (SELECT   h.*
                              FROM   bb_saving_settlement_history h,
                                     bk_account_info info
                             WHERE   h.rollin_acct_no = info.acct_no

                          )
                           c
           LEFT JOIN bk_receipt_info r ON r.receipt_no = c.saving_receipt_no
           LEFT JOIN bk_receipt_product rp ON rp.product_code = r.product_code and rp.language = ''lo_LA''
           WHERE   rp.product_name = i.transfer_type
                   AND c.status IN (''SUCC'',''FAIL'')

             )
             AS user_total,
         (SELECT   COUNT (DISTINCT c.user_id)
            FROM           (SELECT   h.*
                              FROM   bb_saving_settlement_history h,
                                     bk_account_info info
                             WHERE   h.rollin_acct_no = info.acct_no

                          ) c
           LEFT JOIN bk_receipt_info r ON r.receipt_no = c.saving_receipt_no
           LEFT JOIN bk_receipt_product rp ON rp.product_code = r.product_code and rp.language = ''lo_LA''
           WHERE   rp.product_name = i.transfer_type
                   AND c.status = ''SUCC''

              )
             AS user_sucess,
         (SELECT   COUNT (DISTINCT c.user_id)
            FROM           (SELECT   h.*
                              FROM   bb_saving_settlement_history h,
                                     bk_account_info info,
                                     bb_corp_info ci
                            WHERE   h.corp_id = ci.corp_id
                             AND   h.rollin_acct_no = info.acct_no

                            ) c
                   LEFT JOIN bk_receipt_info r ON r.receipt_no = c.saving_receipt_no
                   LEFT JOIN bk_receipt_product rp ON rp.product_code = r.product_code and rp.language = ''lo_LA''
           WHERE   rp.product_name = i.transfer_type
                   AND (c.status = ''FAIL'')

              )
             AS user_fail
  FROM   (  SELECT   d.currency_code,d.transfer_type transfer_type,
                     SUM (d.status_total) status_total,
                     SUM (d.status_sucess) status_sucess,
                     SUM (d.status_fail) status_fail,
                     SUM (d.amount_total) amount_total,
                     SUM (d.amount_sucess) amount_sucess,
                     SUM (d.amount_fee) amount_fee,
                     SUM (d.amount_vat) amount_vat,
                     SUM (d.amount_discount) amount_discount,
                     SUM (d.amount_fail) amount_fail
              FROM   (  SELECT   b.currency_code,''FD_WITHDRAWAL_SETTLEMENT'' AS transfer_type,
                                 COUNT (b.status) AS status_total,
                                 SUM (DECODE (b.status, ''SUCC'', 1, 0))
                                     AS status_sucess,
                                 SUM (DECODE (b.status, ''FAIL'', 1, 0))
                                     AS status_fail,
                                 SUM (b.amount) AS amount_total,
                                 SUM (DECODE (b.status, ''SUCC'', 0))
                                     AS amount_sucess,
                                 SUM (DECODE (b.status, ''SUCC'', b.fee, 0))
                                     AS amount_fee,
                                 0 AS amount_vat,
                                 0 AS amount_discount,
                                 SUM (DECODE (b.status, ''FAIL'', b.amount, 0))
                                     AS amount_fail
                          FROM           (SELECT   h.tran_sn, h.core_sn, h.corp_id, h.user_id, h.saving_receipt_no,
       h.rollin_acct_no, h.amount, h.fee, h.status, h.create_by,
       h.create_time, h.update_by, h.update_time, h.check_by,
       h.check_time, h.checker_remark, h.channel_code, h.wf_process_id,
       h.wf_updated_time, h.wf_status, h.wf_taskid, h.tc_code,
       h.tc_run_time, h.amount_en, h.amount_vn, h.settlement_type,info.currency_code
                                            FROM   bb_saving_settlement_history h,
                                                   bk_account_info info,
                                                   bb_corp_info ci
                                           WHERE   h.corp_id = ci.corp_id
                                           AND h.rollin_acct_no = info.acct_no'
                          || '
                         and h.create_time >= to_date('''
                          || v_sql_from_date
                          || ''','''
                          || v_date_format
                          || ''')'
                          || '
                         and h.create_time <= to_date('''
                          || v_sql_to_date
                          || ''','''
                          || v_date_format
                          || ''')'
                          || v_sql_cif
                          || v_sql_channel
                          || v_sql_pos
                          || v_sql_saving_currency
                          ||'
                          )  b
                          LEFT JOIN bk_receipt_info r ON r.receipt_no = b.saving_receipt_no
                          LEFT JOIN bk_receipt_product rp ON rp.product_code = r.product_code  and rp.language = ''lo_LA''
                          WHERE  b.status IN (''SUCC'',''FAIL'')
                      GROUP BY   b.currency_code, rp.product_name, b.user_id) d
          GROUP BY   d.currency_code,d.transfer_type) i';

        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO
                  v_sum_transaction_out.currency_code,
                  v_sum_transaction_out.transfer_type,
                   v_sum_transaction_out.status_total,
                   v_sum_transaction_out.status_success,
                   v_sum_transaction_out.status_fail,
                   v_sum_transaction_out.amount_total,
                   v_sum_transaction_out.amount_success,
                   v_sum_transaction_out.amount_fee,
                   v_sum_transaction_out.amount_vat,
                   v_sum_transaction_out.amount_discount,
                   v_sum_transaction_out.amount_fail,
                   v_sum_transaction_out.user_total,
                   v_sum_transaction_out.user_success,
                   v_sum_transaction_out.user_fail;

            v_sum_transaction_out.status_total :=
                NVL (v_sum_transaction_out.status_total, 0);
            v_sum_transaction_out.status_success :=
                NVL (v_sum_transaction_out.status_success, 0);
            v_sum_transaction_out.status_fail :=
                NVL (v_sum_transaction_out.status_fail, 0);
            v_sum_transaction_out.amount_total :=
                NVL (v_sum_transaction_out.amount_total, 0);
            v_sum_transaction_out.amount_success :=
                NVL (v_sum_transaction_out.amount_success, 0);
            v_sum_transaction_out.amount_fail :=
                NVL (v_sum_transaction_out.amount_fail, 0);
            v_sum_transaction_out.amount_fee :=
                NVL (v_sum_transaction_out.amount_fee, 0);
            v_sum_transaction_out.amount_vat :=
                NVL (v_sum_transaction_out.amount_vat, 0);
            v_sum_transaction_out.amount_discount :=
                NVL (v_sum_transaction_out.amount_discount, 0);
            v_sum_transaction_out.user_total :=
                NVL (v_sum_transaction_out.user_total, 0);
            v_sum_transaction_out.user_success :=
                NVL (v_sum_transaction_out.user_success, 0);
            v_sum_transaction_out.user_fail :=
                NVL (v_sum_transaction_out.user_fail, 0);

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_sum_transaction_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_corp_sum_transaction,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END corp_sum_transaction;

    FUNCTION pending_transaction (p_from_date        timestamp,
                              p_to_date          timestamp,                             
                              p_transfer_type    VARCHAR2,                             
                              p_pos              VARCHAR2,
                              p_bank_no          VARCHAR2,
                              p_customerType        VARCHAR2,
                              p_cif              VARCHAR2,
                              p_username         VARCHAR2,
                              p_class_type       VARCHAR2   )
        RETURN tbl_transaction_transfer
        PIPELINED
    IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        v_transaction_transfer_out row_transaction_transfer
                := row_transaction_transfer (NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL,
                                             NULL);

        TYPE ref_ IS REF CURSOR;

        v_cur                 ref_;
        v_count               NUMBER := 0;
        v_pos_office          VARCHAR2 (50);
        v_p_org_no            VARCHAR2 (50);
        v_org_no              VARCHAR2 (50);
        v_log_param           VARCHAR2 (300);
        v_numofrowreturn      NUMBER := 0;
        v_rpt_seq             NUMBER := -1;
        v_sql                 CLOB;
        v_sql_user_group      VARCHAR2 (50) := '';
        v_sql_transfer_type   VARCHAR2 (50) := '';
        v_sql_channel         VARCHAR2 (50) := '';
        v_sql_pos             VARCHAR2 (500) := '';
        v_sql_from_date       VARCHAR2 (50);
        v_sql_to_date         VARCHAR2 (50);
        v_date_format         VARCHAR2 (50) := 'dd/MM/yyyy HH24:mi:ss';
        v_customerType           VARCHAR2 (50) := '';
        v_cif                 VARCHAR2 (50) := '';
        v_username            VARCHAR2 (50) := '';
        v_class_type          VARCHAR2 (50) := '';
    BEGIN
        v_sql_from_date := TO_CHAR (p_from_date, v_date_format);
        v_sql_to_date := TO_CHAR (p_to_date, v_date_format);

       

        IF p_transfer_type IS NOT NULL
        THEN
            v_sql_transfer_type :=
                ' where t.transtype like ''%' || p_transfer_type || '''';
        END IF;

        
        
        IF p_customerType IS NOT NULL
        THEN
            v_customerType:=  p_customerType;
        END IF;
        
         IF p_cif IS NOT NULL
        THEN
            v_cif := ' and bk.cif_no = ''' || p_cif || '''';
        END IF;
        
         IF p_username IS NOT NULL
        THEN
            v_username := ' and u.user_name = ''' || p_username || '''';
        END IF;
        
         IF p_class_type IS NOT NULL
        THEN
            v_class_type := ' and his.IS_VR_TRAN = ''' || p_class_type || '''';
        END IF;
        
        
        IF rpt_ins_log_tbl
        THEN
            v_rpt_seq :=
                sys_common_rpt.proc_log (
                    rpt_package_name || rpt_retail_trans_transfer);
        END IF;

        v_log_param :=
               'i_from_date:'
            || p_from_date
            || ',i_to_date:'
            || p_to_date
            || ',i_transfer_type:'
            || p_transfer_type
            
            || ',i_pos:'
            || REPLACE (p_pos, ',', '|')
            || ',i_bank_no:'
            || p_bank_no
            || ',i_customerType:'
            || p_customerType
            || ',i_cif:'
            || p_cif
            || ',i_username:'
            || p_username;

        v_pos_office := sys_common_rpt.get_pos_office;

        BEGIN
            SELECT   COUNT (1)
              INTO   v_count
              FROM   bk_bank_org
             WHERE   p_org_no = p_pos AND bank_no = p_bank_no;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                v_count := 0;
        END;

        IF v_count = 0
        THEN
            v_sql_pos := ' and  u.sign_org = ''' || p_pos || '''';
            v_sql :=
                'select (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name  from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no = t.org) branch,';
        ELSE
            IF p_pos != v_pos_office
            THEN
                v_sql_pos :=
                       ' and  u.sign_org IN(select org_no from table('
                    || rpt_package_name
                    || rpt_list_pos_by_branch
                    || '('''
                    || p_pos
                    || ''','''
                    || p_bank_no
                    || ''','''','''')))';
            END IF;

            v_sql :=
                'select
                    (select decode(p_org_no,null,''000000'',p_org_no)||''|''||short_name from bk_bank_org where org_no = (select decode(p_org_no,null,org_no,decode(p_org_no,'''
                || v_pos_office
                || ''',org_no,p_org_no)) from bk_bank_org where bank_no='''
                || p_bank_no
                || ''' and org_no=t.org)) branch,';
        END IF;

        v_sql :=
            v_sql
            || '
                    t.org,'''' as p_org_no,t.core_sn,t.transferDate,t.acctNo,t.cif_no,t.user_id,t.name,t.productType,t.channelCode,
                    decode(t.transType,''transfer_card'',''TransferCard'', decode(t.transType,''transfer_cmt'',''TransferCMT'',
                    decode(t.transType,''external_schedule'',''ScheduledInterBankTransfer'',decode(t.transType,''internal_schedule'',''ScheduledInternalTransfer'',
                    decode(t.transType,''external_batch'',''BatchInterBankTransfer'',decode(t.transType,''internal_batch'',''BatchInternalTransfer'',
                    decode(t.transType,''external_transfer'',''InterBankTransfer'',decode(t.transType,''internal_transfer'',''InternalTransfer'',t.transType)))))))) as transType,
                    t.amount,t.fee,t.vat,t.currencyCode,t.remark,t.status
                    from (select
                    u.sign_org org,
                    his.core_sn,
                    his.create_time as transferDate,
                    his.rollout_account_no acctNo,
                    bk.cif_no,
                    his.USER_ID,
                    bk.acct_name name,
                    bk.acct_type productType,
                    his.channel_code channelCode,
                    decode(his.service_type,''TT'',''transfer_card'',decode(his.service_type,''TC'',''transfer_cmt'',decode( his.is_schedule,''Y'',
                    decode(his.is_inter_bank,''Y'',''external_schedule'',''internal_schedule''),decode(his.is_batch,''Y'',decode(his.is_inter_bank,''Y'',''external_batch'',''internal_batch''),
                    decode(his.is_inter_bank,''Y'',''external_transfer'',''internal_transfer''))))) transType,
                    his.amount,
                    his.fee,
                    his.vat,
                    bk.currency_code currencyCode,
                    his.remark,
                    his.status
                from '||v_customerType||'_transfer_history his inner join bk_account_info bk
                on  bk.acct_no=his.rollout_account_no
                inner join ' || v_customerType ||'_user_info u
                on his.USER_ID = u.USER_ID
                and his.status = ''PTSM'' 
                '
            || v_sql_channel
            || v_class_type
            || v_sql_pos
            || ' and his.create_time >= to_date('''
            || v_sql_from_date
            || ''','''
            || v_date_format
            || ''')'
            || '
                and his.create_time <= to_date('''
            || v_sql_to_date
            || ''','''
            || v_date_format
            || ''')'
            ||  v_cif  || v_username || '  ) t '
            || v_sql_transfer_type
            || ' order by branch, transferDate desc ';


        EXECUTE IMMEDIATE 'truncate table rpt_tmp';

        INSERT INTO rpt_tmp
          VALUES   (v_sql);

        COMMIT;

        OPEN v_cur FOR v_sql;

        LOOP
            FETCH v_cur
            INTO   v_transaction_transfer_out.branch,
                   v_transaction_transfer_out.org_no,
                   v_transaction_transfer_out.p_org_no,
                   v_transaction_transfer_out.core_sn,
                   v_transaction_transfer_out.transfer_date,
                   v_transaction_transfer_out.account_no,
                   v_transaction_transfer_out.cif_no,
                   v_transaction_transfer_out.user_id,
                   v_transaction_transfer_out.account_name,
                   v_transaction_transfer_out.account_type,
                   v_transaction_transfer_out.channel_code,
                   v_transaction_transfer_out.transfer_type,
                   v_transaction_transfer_out.amount,
                   v_transaction_transfer_out.fee,
                   v_transaction_transfer_out.vat,
                   v_transaction_transfer_out.currency_code,
                   v_transaction_transfer_out.status,
                   v_transaction_transfer_out.remark;

            IF (v_transaction_transfer_out.branch IS NOT NULL)
            THEN
                v_p_org_no := NULL;

                v_p_org_no :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        0,
                        INSTR (v_transaction_transfer_out.branch, '|') - 1);

                v_transaction_transfer_out.branch :=
                    SUBSTR (
                        v_transaction_transfer_out.branch,
                        INSTR (v_transaction_transfer_out.branch, '|') + 1,
                        LENGTH (v_transaction_transfer_out.branch));

                v_transaction_transfer_out.p_org_no := v_p_org_no;
            END IF;

            EXIT WHEN v_cur%NOTFOUND;
            PIPE ROW (v_transaction_transfer_out);
            v_numofrowreturn := v_numofrowreturn + 1;
        END LOOP;

        CLOSE v_cur;


        IF rpt_ins_log_tbl
        THEN
            sys_common_rpt.proc_update_log (v_rpt_seq,
                                            v_log_param,
                                            v_numofrowreturn,
                                            rpt_success_status);
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            DBMS_OUTPUT.put_line(SUBSTR (
                                        'Error '
                                     || TO_CHAR (SQLCODE)
                                     || ': '
                                     || SQLERRM,
                                     1,
                                     1000));

            IF rpt_ins_log_tbl
            THEN
                sys_common_rpt.proc_update_log (v_rpt_seq,
                                                v_log_param,
                                                v_numofrowreturn,
                                                rpt_fail_status);
            END IF;

            sys_common_rpt.proc_log_error (
                rpt_package_name || rpt_retail_trans_transfer,
                SUBSTR ('Error ' || TO_CHAR (SQLCODE) || ': ' || SQLERRM,
                        1,
                        1000));
    END pending_transaction;

END sys_gen_rpt;